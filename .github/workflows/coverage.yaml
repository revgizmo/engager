name: Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.local/share/R
            ~/.cache/R
          key: ${{ runner.os }}-coverage-${{ hashFiles('.github/workflows/coverage.yaml') }}
          restore-keys: |
            ${{ runner.os }}-coverage-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      - name: Install dependencies
        run: |
          options(repos = c(CRAN = "https://cloud.r-project.org"))
          install.packages(c("remotes", "covr", "roxygen2"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Generate documentation
        run: |
          options(repos = c(CRAN = "https://cloud.r-project.org"))
          roxygen2::roxygenise()
        shell: Rscript {0}

      - name: Run coverage (exported functions only) and enforce threshold
        id: coverage
        run: |
          options(repos = c(CRAN = "https://cloud.r-project.org"))
          devtools::load_all(quiet = TRUE)
          cov <- covr::package_coverage()
          df <- as.data.frame(cov)
          df <- df[!is.na(df$functions) & nzchar(df$functions), ]
          exports <- getNamespaceExports("engager")
          filtered <- df[df$functions %in% exports, , drop = FALSE]
          if (nrow(filtered) == 0) {
            stop("No exported functions found in coverage data")
          }
          covered <- sum(filtered$value > 0, na.rm = TRUE)
          total <- nrow(filtered)
          pct <- round(100 * covered / total, 2)
          cat(sprintf("exported_coverage=%.2f\n", pct))
          if (pct < 90) quit(status = 1)
        shell: Rscript {0}