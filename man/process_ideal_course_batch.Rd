% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ideal-course-batch.R
\name{process_ideal_course_batch}
\alias{process_ideal_course_batch}
\title{Process all ideal course transcripts in batch}
\usage{
process_ideal_course_batch(
  include_roster = TRUE,
  privacy_level = "masked",
  output_format = "list",
  consolidate_comments = TRUE,
  add_dead_air = TRUE,
  names_exclude = c("dead_air")
)
}
\arguments{
\item{include_roster}{Logical. Whether to include roster data in processing.
Default: TRUE}

\item{privacy_level}{Character. Privacy level for processing. Options:
"full" (FERPA strict), "masked" (default), "none" (no privacy protection)}

\item{output_format}{Character. Output format. Options: "list" (default),
"data.frame", "summary"}

\item{consolidate_comments}{Logical. Whether to consolidate consecutive comments.
Default: TRUE}

\item{add_dead_air}{Logical. Whether to add dead air rows. Default: TRUE}

\item{names_exclude}{Character vector. Names to exclude from analysis.
Default: c("dead_air")}
}
\value{
List or data.frame with batch processing results containing:
\itemize{
\item session_data: Processed transcript data for each session
\item summary_metrics: Engagement metrics for each session
\item participation_patterns: Cross-session participation analysis
\item validation_results: Basic validation checks
\item processing_info: Metadata about the batch processing
}
}
\description{
Processes all ideal course transcripts (sessions 1-3) in batch mode, providing
comprehensive analysis across multiple scenarios. This function is designed
for testing, validation, and demonstration purposes using the package's
synthetic ideal course data.
}
\examples{
\dontrun{
# Process all ideal course sessions with default settings
batch_results <- process_ideal_course_batch()

# Process with custom privacy settings
batch_results <- process_ideal_course_batch(
  privacy_level = "full",
  output_format = "summary"
)

# Process without roster data
batch_results <- process_ideal_course_batch(
  include_roster = FALSE,
  output_format = "data.frame"
)
}

}
