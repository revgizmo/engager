% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mask_user_names_by_metric.R
\name{mask_user_names_by_metric}
\alias{mask_user_names_by_metric}
\title{Mask User Names by Metric}
\usage{
mask_user_names_by_metric(df, metric = "session_ct", target_student = "")
}
\arguments{
\item{df}{a tibble that summarizes results at the level of the class section
and student.  This tibble will have the student names replaced by the
ranking of the student.  If a `target_student` preferred name is provided,
that student's name will be bolded using markdown syntax and not masked.}

\item{metric}{Label of the metric to use to order the students. Defaults to
'session_ct'.}

\item{target_student}{preferred student name of an individual student that
will be bolded using markdown syntax and not masked. Defaults to ''.}
}
\value{
a tibble that summarizes results at the level of the class section
  and student, with student names masked by the ranking of the student.
}
\description{
Mask User Names by Metric
}
\examples{
# Create sample transcript list
sample_transcript_list <- tibble::tibble(
  name = c("John Smith", "Jane Doe", "Unknown"),
  section = c("CS101", "CS101", "CS101"),
  day = c("2024-01-01", "2024-01-01", "2024-01-01"),
  time = c("10:00", "10:00", "10:00"),
  n = c(5, 3, 1),
  duration = c(300, 180, 60),
  wordcount = c(500, 300, 100),
  comments = c(10, 5, 2),
  n_perc = c(0.5, 0.3, 0.1),
  duration_perc = c(0.5, 0.3, 0.1),
  wordcount_perc = c(0.5, 0.3, 0.1),
  wpm = c(100, 100, 100),
  name_raw = c("John Smith", "Jane Doe", "Unknown"),
  start_time_local = c("2024-01-01 10:00:00", "2024-01-01 10:00:00", "2024-01-01 10:00:00"),
  dept = c("CS", "CS", "CS"),
  session_num = c(1, 1, 1)
)

# Create sample roster
sample_roster <- tibble::tibble(
  first_last = c("John Smith", "Jane Doe"),
  dept = c("CS", "CS"),
  transcript_section = c("CS101", "CS101"),
  session_num = c(1, 1),
  start_time_local = c("2024-01-01 10:00:00", "2024-01-01 10:00:00"),
  student_id = c("12345", "67890")
)

mask_user_names_by_metric(
  make_transcripts_summary_df(
    make_transcripts_session_summary_df(
      clean_names_df = make_clean_names_df(
        data_folder = "data",
        section_names_lookup_file = "section_names_lookup.csv",
        transcripts_metrics_df = sample_transcript_list,
        roster_sessions = sample_roster
      )
    )
  )
)

}
