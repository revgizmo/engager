#0 building with "desktop-linux" instance using docker driver

#1 [internal] load build definition from Dockerfile.agent
#1 transferring dockerfile: 2.61kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/rocker/r-ver:4.4.0
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 191B done
#3 DONE 0.0s

#4 [1/7] FROM docker.io/rocker/r-ver:4.4.0
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 12.33kB 0.0s done
#5 DONE 0.0s

#6 [5/7] RUN R -q -e "install.packages(c('askpass', 'backports', 'base64enc', 'bit', 'bit64', 'brew', 'brio', 'bslib', 'cachem', 'callr', 'cli', 'clipr', 'codetools', 'collections', 'commonmark', 'covr', 'cpp11', 'crayon', 'credentials', 'curl', 'data.table', 'desc', 'devtools', 'diffobj', 'digest', 'downlit', 'dplyr', 'ellipsis', 'evaluate', 'fansi', 'farver', 'fastmap', 'fontawesome', 'fs', 'generics', 'gert', 'ggplot2', 'gh', 'gitcreds', 'glue', 'gtable', 'highr', 'hms', 'htmltools', 'htmlwidgets', 'httpuv', 'httr', 'httr2', 'ini', 'isoband', 'jquerylib', 'jsonlite', 'knitr', 'labeling', 'languageserver', 'later', 'lattice', 'lazyeval', 'lifecycle', 'lintr', 'lubridate', 'magrittr', 'MASS', 'Matrix', 'memoise', 'mgcv', 'mime', 'miniUI', 'nlme', 'openssl', 'pillar', 'pkgbuild', 'pkgconfig', 'pkgdown', 'pkgload', 'praise', 'prettyunits', 'processx', 'profvis', 'progress', 'promises', 'ps', 'purrr', 'R.cache', 'R.methodsS3', 'R.oo', 'R.utils', 'R6', 'ragg', 'rappdirs', 'rcmdcheck', 'RColorBrewer', 'Rcpp', 'readr', 'remotes', 'rex', 'rlang', 'rmarkdown', 'roxygen2', 'rprojroot', 'rstudioapi', 'rversions', 'sass', 'scales', 'sessioninfo', 'shiny', 'sourcetools', 'stringi', 'stringr', 'styler', 'sys', 'systemfonts', 'testthat', 'textshaping', 'tibble', 'tidyr', 'tidyselect', 'timechange', 'tinytex', 'tzdb', 'urlchecker', 'usethis', 'utf8', 'vctrs', 'viridisLite', 'vroom', 'waldo', 'whisker', 'withr', 'xfun', 'xml2', 'xmlparsedata', 'xopen', 'xtable', 'yaml', 'zip'), repos='https://cloud.r-project.org')"
#6 CACHED

#7 [6/7] RUN R CMD INSTALL .
#7 CACHED

#8 [2/7] RUN apt-get update && apt-get install -y     git curl wget pkg-config build-essential     libcurl4-openssl-dev libssl-dev libxml2-dev     libbz2-dev liblzma-dev libz-dev     libfontconfig1-dev libharfbuzz-dev libfribidi-dev     libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev     libudunits2-dev libgdal-dev libgeos-dev libproj-dev     libgit2-dev libcairo2-dev libpango1.0-dev libxt-dev     libreadline-dev libblas-dev liblapack-dev     && rm -rf /var/lib/apt/lists/*
#8 CACHED

#9 [4/7] COPY . /workspace/
#9 CACHED

#10 [3/7] WORKDIR /workspace
#10 CACHED

#11 [7/7] RUN useradd -m -s /bin/bash ruser &&     chown -R ruser:ruser /workspace
#11 CACHED

#12 exporting to image
#12 exporting layers done
#12 writing image sha256:094dbe6c22524ceb06fe91f0fee23b1cbb2dd3bfc6266ec969b4c06f0f089bd4 done
#12 naming to docker.io/library/debug-manual-build done
#12 DONE 0.0s
