[{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":null,"dir":"","previous_headings":"","what":"Changelog","title":"Changelog","text":"notable changes project documented file. format based Keep Changelog, project adheres Semantic Versioning.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"added","dir":"","previous_headings":"[0.1.0] - 2025-01-12","what":"Added","title":"Changelog","text":"Initial CRAN-ready release engager package Complete package functionality analyzing student engagement Zoom transcripts 47 exported functions comprehensive roxygen2 documentation 90.48% test coverage 1,785 passing tests Privacy-first design FERPA compliance data anonymization Comprehensive plotting capabilities engagement visualization Batch processing support multiple transcript files Session management transcript consolidation Multiple export formats (CSV, Excel) analysis results Vignettes documentation getting started advanced usage","code":""},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"features","dir":"","previous_headings":"[0.1.0] - 2025-01-12","what":"Features","title":"Changelog","text":"Student engagement analysis Zoom transcript data Participation equity metrics privacy protection Name matching workflow user-friendly prompts Transcript processing support various Zoom formats Engagement visualization customizable plots Privacy controls including masking, hashing, pseudonymization FERPA compliance educational data protection Performance optimization large transcript files","code":""},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"technical","dir":"","previous_headings":"[0.1.0] - 2025-01-12","what":"Technical","title":"Changelog","text":"R CMD check: 0 errors, 0 warnings, 2 acceptable notes vignettes building successfully Complete roxygen2 documentation exported functions Professional package structure following R package best practices Comprehensive test suite covering major functionality Code quality consistent styling error handling Dependency management proper version constraints","code":""},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"package-structure","dir":"","previous_headings":"[0.1.0] - 2025-01-12","what":"Package Structure","title":"Changelog","text":"Core functions: Transcript loading, processing, analysis Privacy functions: Data anonymization FERPA compliance Visualization functions: Engagement plotting reporting Utility functions: File handling, data validation, formatting Internal functions: Helper functions package operation","code":""},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"dependencies","dir":"","previous_headings":"[0.1.0] - 2025-01-12","what":"Dependencies","title":"Changelog","text":"Core: data.table, dplyr, ggplot2, lubridate, magrittr, readr, rlang, stringr, tibble, tidyr, tidyselect Development: testthat, covr, knitr, rmarkdown Optional: openxlsx (Excel export), digest (hashing)","code":""},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"installation","dir":"","previous_headings":"[0.1.0] - 2025-01-12","what":"Installation","title":"Changelog","text":"","code":"# Install from GitHub (development version) remotes::install_github(\"revgizmo/engager\")  # Install from CRAN (after submission) install.packages(\"engager\")"},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"quick-start","dir":"","previous_headings":"[0.1.0] - 2025-01-12","what":"Quick Start","title":"Changelog","text":"","code":"library(engager)  # Load and analyze transcripts transcripts <- load_zoom_transcript(\"path/to/transcript.vtt\") engagement <- analyze_transcript_engagement(transcripts)  # Visualize results plot_users(engagement, metric = \"speaking_time\")  # Export results write_metrics(engagement, \"output.csv\")"},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"documentation","dir":"","previous_headings":"[0.1.0] - 2025-01-12","what":"Documentation","title":"Changelog","text":"README.md: Package overview installation Vignettes: Getting started advanced usage Function documentation: Complete roxygen2 docs Examples: Working examples exported functions","code":""},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"license","dir":"","previous_headings":"[0.1.0] - 2025-01-12","what":"License","title":"Changelog","text":"MIT License - see LICENSE file details","code":""},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"contributing","dir":"","previous_headings":"[0.1.0] - 2025-01-12","what":"Contributing","title":"Changelog","text":"See CONTRIBUTING.md development guidelines contribution process","code":""},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"support","dir":"","previous_headings":"[0.1.0] - 2025-01-12","what":"Support","title":"Changelog","text":"Issues: https://github.com/revgizmo/engager/issues Documentation: https://revgizmo.github.io/engager/ Email: conorhealy@berkeley.edu","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"id_011---planned","dir":"","previous_headings":"Future Releases","what":"[0.1.1] - Planned","title":"Changelog","text":"Bug fixes minor improvements Enhanced error handling Performance optimizations","code":""},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"id_020---planned","dir":"","previous_headings":"Future Releases","what":"[0.2.0] - Planned","title":"Changelog","text":"New plotting options themes Enhanced privacy controls Additional export formats Performance improvements","code":""},{"path":"https://revgizmo.github.io/engager/CHANGELOG.html","id":"id_100---planned","dir":"","previous_headings":"Future Releases","what":"[1.0.0] - Planned","title":"Changelog","text":"API stabilization Complete documentation Full test coverage Production-ready release","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to engager","title":"Contributing to engager","text":"Thank interest contributing engager package! document outlines development workflow best practices.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"for-new-contributors","dir":"","previous_headings":"Quick Start","what":"For New Contributors","title":"Contributing to engager","text":"Read guide - Understand development workflow Check AI guidelines - AI-Assisted Development Guide Review current issues - gh issue list --limit 10 Pick issue - Start “good first issue” “priority:medium” Follow workflow - Create branch, make changes, test, submit PR","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"for-ai-assisted-development","dir":"","previous_headings":"Quick Start","what":"For AI-Assisted Development","title":"Contributing to engager","text":"Use context scripts - ./scripts/context--new-chat.sh Follow AI guidelines - AI-Assisted Development Guide Complete AI training - AI Agent Training Guide Use AI workflow - AI Agent Workflow Review examples - AI Agent Examples Maintain ethical standards - Privacy first, FERPA compliance Validate changes - Run pre-PR validation checklist","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"branching-strategy","dir":"","previous_headings":"Development Workflow","what":"Branching Strategy","title":"Contributing to engager","text":"use following branch structure: main: Production-ready code development: Integration branch features feature/*: New features (e.g., feature/improve-visualizations) bugfix/*: Bug fixes (e.g., bugfix/fix-name-matching) docs/*: Documentation updates test/*: Test-related changes release/*: Release preparation","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"versioning-strategy","dir":"","previous_headings":"Development Workflow","what":"Versioning Strategy","title":"Contributing to engager","text":"follow Semantic Versioning (SemVer) releases:","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"version-format-majorminorpatch","dir":"","previous_headings":"Development Workflow > Versioning Strategy","what":"Version Format: MAJOR.MINOR.PATCH","title":"Contributing to engager","text":"MAJOR: Breaking changes public API MINOR: New features, backward compatible PATCH: Bug fixes, backward compatible","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"version-progression","dir":"","previous_headings":"Development Workflow > Versioning Strategy","what":"Version Progression","title":"Contributing to engager","text":"0.1.0: First official release (current) 0.1.1: Bug fixes minor improvements 0.2.0: New features enhancements 1.0.0: API stabilization production readiness","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"release-process","dir":"","previous_headings":"Development Workflow > Versioning Strategy","what":"Release Process","title":"Contributing to engager","text":"Update CHANGELOG.md changes Update DESCRIPTION version number Create git tag (e.g., v0.1.1) Push tag GitHub Create GitHub release release notes Submit CRAN (major releases)","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"version-guidelines","dir":"","previous_headings":"Development Workflow > Versioning Strategy","what":"Version Guidelines","title":"Contributing to engager","text":"Pre-release versions (0.x.x): Development phase, API may change Stable versions (1.x.x): Production ready, backward compatible Breaking changes: MAJOR versions New features: MINOR versions Bug fixes: PATCH versions ","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"git-commit-messages","dir":"","previous_headings":"Development Workflow","what":"Git Commit Messages","title":"Contributing to engager","text":"Follow conventions commit messages: Types: - feat: New feature - fix: Bug fix - docs: Documentation changes - style: Code style changes - refactor: Code refactoring - test: Test-related changes - chore: Maintenance tasks Examples:","code":"<type>(<scope>): <description>  [optional body]  [optional footer] feat(visualization): add engagement heatmap plot fix(name-matching): handle special characters in student names docs(readme): update installation instructions"},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"Development Workflow","what":"Pull Requests","title":"Contributing to engager","text":"Create new branch develop Make changes Run tests locally Push branch Create pull request develop Link relevant issues using Fixes #X Closes #X Request review maintainers","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"quick-review-checklist","dir":"","previous_headings":"Pull Request Review","what":"Quick Review Checklist","title":"Contributing to engager","text":"CRAN Compliance: submission blockers, examples work Privacy-First: FERPA compliance, data protection Quality Standards: Code quality, testing, documentation Merge Readiness: Conflicts resolved, CI passing Project Alignment: Supports CRAN submission goals","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"temporary-ci-policy-until-ci-is-unblocked--see-issue-406","dir":"","previous_headings":"Pull Request Review > Quick Review Checklist","what":"Temporary CI Policy (until CI is unblocked) — see Issue #406","title":"Contributing to engager","text":"Rscript scripts/pre-pr-validation.R ./scripts/save-context.sh Document successful runs PR description review comment. CI restored, temporary policy removed normal CI gating resume. Track Issue #406.","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"decision-criteria","dir":"","previous_headings":"Pull Request Review","what":"Decision Criteria","title":"Contributing to engager","text":"APPROVE: Meets criteria, ready merge REVISE: merit needs specific improvements REJECT: Doesn’t meet standards conflicts priorities","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"common-scenarios","dir":"","previous_headings":"Pull Request Review","what":"Common Scenarios","title":"Contributing to engager","text":"Clean Merge: Standard process, conflicts Merge Conflicts: Rebase required merge Branch Protection: Use admin override appropriate CI Pending / Blocked: CI blocked (Issue #406), self-merge allowed scripts/pre-pr-validation.R scripts/save-context.sh complete successfully locally results recorded PR.","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"time-estimates","dir":"","previous_headings":"Pull Request Review","what":"Time Estimates","title":"Contributing to engager","text":"Low: <10 files, documentation (10-15 min) Medium: 10-50 files, code changes (15-25 min) High: >50 files, infrastructure (25-40 min) Note: complex PRs team reviews, see PR_REVIEW_PROMPT_GENERATOR_OPTIMIZED.md detailed guidance.","code":""},{"path":[]},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"r-style-guidelines","dir":"","previous_headings":"Development Guidelines > Code Quality Standards","what":"R Style Guidelines","title":"Contributing to engager","text":"Follow tidyverse style guide Use styler::style_pkg() format code Run lintr::lint_package() check style issues Prefer <- assignment = Use snake_case function variable names Use camelCase data frame column names appropriate Maximum line length: 80 characters","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"function-design","dir":"","previous_headings":"Development Guidelines > Code Quality Standards","what":"Function Design","title":"Contributing to engager","text":"exported functions must complete roxygen2 documentation Include @param, @return, @examples sections Use @export tag public functions Use @keywords internal internal functions examples must runnable tested","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"error-handling","dir":"","previous_headings":"Development Guidelines > Code Quality Standards","what":"Error Handling","title":"Contributing to engager","text":"Use stop() fatal errors informative messages Use warning() recoverable issues Use message() informational output Validate input parameters early functions Provide helpful error messages guide users","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"performance-considerations","dir":"","previous_headings":"Development Guidelines > Code Quality Standards","what":"Performance Considerations","title":"Contributing to engager","text":"Use data.table large data operations Implement chunking large transcript files Add progress indicators long operations Consider parallel processing batch operations Profile functions performance bottlenecks","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"test-coverage","dir":"","previous_headings":"Development Guidelines > Testing Requirements","what":"Test Coverage","title":"Contributing to engager","text":"Aim >90% test coverage Use testthat unit tests Include positive negative test cases Test edge cases error conditions Run tests locally PR submission","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"test-organization","dir":"","previous_headings":"Development Guidelines > Testing Requirements","what":"Test Organization","title":"Contributing to engager","text":"Tests organized function/module:","code":"tests/   testthat/     test-name-matching.R     test-transcript-processing.R     test-visualization.R     test-engagement-metrics.R"},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"running-tests","dir":"","previous_headings":"Development Guidelines > Testing Requirements","what":"Running Tests","title":"Contributing to engager","text":"","code":"# Run all tests devtools::test()  # Run specific test file devtools::test(\"tests/testthat/test-name-matching.R\")  # Check test coverage covr::package_coverage()  # Run tests with verbose output devtools::test(reporter = \"verbose\")"},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"test-best-practices","dir":"","previous_headings":"Development Guidelines > Testing Requirements","what":"Test Best Practices","title":"Contributing to engager","text":"Write tests implementing features (TDD) Test success failure cases Use descriptive test names Group related tests describe() blocks Use testthat::skip_on_cran() tests requiring external data Create minimal test datasets inst/extdata/","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"Development Guidelines > Documentation Standards","what":"Function Documentation","title":"Contributing to engager","text":"Use roxygen2 function documentation Include @title, @description, @param, @return, @examples Use @seealso link related functions Use @family group related functions Include @export public functions Use @keywords internal internal functions","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"examples","dir":"","previous_headings":"Development Guidelines > Documentation Standards","what":"Examples","title":"Contributing to engager","text":"examples must runnable Use \\dontrun{} examples require external data Use \\donttest{} examples slow Provide realistic examples sample data Test examples devtools::check_examples()","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"package-documentation","dir":"","previous_headings":"Development Guidelines > Documentation Standards","what":"Package Documentation","title":"Contributing to engager","text":"Keep README.md comprehensive --date Create vignettes complex workflows Use devtools::build_readme() rebuild README README.Rmd","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"overview","dir":"","previous_headings":"AI Agent Workflow","what":"Overview","title":"Contributing to engager","text":"AI Agent Workflow provides structured approach AI agents contribute effectively project maintaining quality, consistency, CRAN compliance standards.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"id_1-issue-analysis--planning","dir":"","previous_headings":"AI Agent Workflow > Workflow Steps","what":"1. Issue Analysis & Planning","title":"Contributing to engager","text":"Review GitHub issue description thoroughly Identify specific phase work type needed Understand success criteria technical requirements Create update planning documents needed","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"id_2-development--implementation","dir":"","previous_headings":"AI Agent Workflow > Workflow Steps","what":"2. Development & Implementation","title":"Contributing to engager","text":"Follow R package development standards Implement functionality according specifications Maintain privacy-first approach Ensure CRAN compliance Create comprehensive documentation Write comprehensive tests >90% coverage","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"id_3-validation--submission","dir":"","previous_headings":"AI Agent Workflow > Workflow Steps","what":"3. Validation & Submission","title":"Contributing to engager","text":"Complete pre-PR validation checklist Fix issues found validation Ensure tests pass documentation complete Create pull request descriptive title body Link relevant issues using Fixes #[NUMBER]","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"required-documentation","dir":"","previous_headings":"AI Agent Workflow","what":"Required Documentation","title":"Contributing to engager","text":"AI Agent Workflow: Complete workflow reference AI Agent Training: Step--step training guide AI Agent Examples: Real-world usage examples AI Agent Prompt Generator: Create prompts new AI agents","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"success-criteria","dir":"","previous_headings":"AI Agent Workflow","what":"Success Criteria","title":"Contributing to engager","text":"tests pass (devtools::test()) Code coverage >90% (covr::package_coverage()) linting errors (lintr::lint_package()) examples run (devtools::check_examples()) R CMD check passes (devtools::check()) Documentation complete accurate Include installation instructions basic usage examples Update NEWS.md user-facing changes","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"pre-pr-validation","dir":"","previous_headings":"AI Agent Workflow","what":"Pre-PR Validation","title":"Contributing to engager","text":"creating pull request, run checks:","code":"# Phase 1: Code Quality (5-10 minutes) styler::style_pkg()                  # Ensure consistent formatting lintr::lint_package()               # Check code quality  # Phase 2: Documentation (2-5 minutes) devtools::document()                 # Update roxygen2 documentation devtools::build_readme()             # Rebuild README.md devtools::spell_check()              # Check for typos  # Phase 3: Testing (3-5 minutes) devtools::test()                     # Run all tests covr::package_coverage()             # Check test coverage  # Phase 4: Final Validation (5-10 minutes) devtools::check()                    # Full package check devtools::build()                    # Create distributable package"},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"pre-commit-hooks-recommended","dir":"","previous_headings":"AI Agent Workflow","what":"Pre-commit Hooks (Recommended)","title":"Contributing to engager","text":"Keep changes clean running formatting linting automatically commit using pre-commit hooks. Setup (one time): runs: - Base hygiene hooks: trailing whitespace, EOF fixer, YAML checks - Local R hook via scripts/pre-commit.sh : - Styles staged .R/.Rmd files using styler - Lints staged files using lintr fails lint Notes: - hook modifies files (e.g., styling), re-stage commit. - Keep styler/lintr versions current match CI behavior.","code":"# Install pre-commit (choose one) brew install pre-commit             # macOS pipx install pre-commit             # Python toolchain (recommended) python3 -m pip install --user pre-commit  # Install R dependencies used by the hooks Rscript -e \"install.packages(c('styler','lintr','roxygen2','spelling'), dep = TRUE)\"  # Install the hooks defined in .pre-commit-config.yaml pre-commit install  # Optional: run hooks across the entire repo once pre-commit run --all-files"},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"diagnostic-output-policy","dir":"","previous_headings":"AI Agent Workflow","what":"Diagnostic Output Policy","title":"Contributing to engager","text":"Default quiet output. Provide verbose = FALSE argument functions may emit diagnostics. Gate print(), message(), cat() calls behind verbose flag test guard, example: Guard interactive prompts interactive() provide non-interactive fallbacks: Keep examples runnable quiet default; avoid stray diagnostics examples tests. pre-PR validator enforces policy; ensure reports “diagnostic output properly conditional” opening PR.","code":"if (isTRUE(verbose) && Sys.getenv(\"TESTTHAT\") != \"true\") {   message(\"detailed status...\") } if (interactive()) {   # prompt user } else {   # fallback path without prompting }"},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"managing-issues-from-markdown-plans","dir":"","previous_headings":"AI Agent Workflow","what":"Managing Issues from Markdown Plans","title":"Contributing to engager","text":"maintain Markdown plan ISSUES/docs_overhaul_plan.md sync GitHub Issues. Dry run: Create/update issues: plan_path: path plan (default: ISSUES/docs_overhaul_plan.md) update: true update existing issues matching titles Plan format: - Front matter: milestone, tracking_issue_title - ## Heading becomes issue; optional Labels: Assignees: lines per section.","code":"DRY_RUN=1 bash scripts/create_issues_from_plan.sh ISSUES/docs_overhaul_plan.md export GH_TOKEN=YOUR_TOKEN UPDATE_IF_EXISTS=1 bash scripts/create_issues_from_plan.sh ISSUES/docs_overhaul_plan.md"},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"code-quality","dir":"","previous_headings":"AI Agent Workflow > Validation Requirements","what":"Code Quality","title":"Contributing to engager","text":"Code follows tidyverse style guide lintr warnings errors Consistent naming conventions Proper error handling Input validation implemented","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"AI Agent Workflow > Validation Requirements","what":"Documentation","title":"Contributing to engager","text":"exported functions documented Examples runnable tested README.md current spelling errors Vignettes date","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"testing","dir":"","previous_headings":"AI Agent Workflow > Validation Requirements","what":"Testing","title":"Contributing to engager","text":"tests pass Coverage >90% new code Edge cases covered Error conditions tested Performance considerations addressed","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"cran-compliance","dir":"","previous_headings":"AI Agent Workflow > Validation Requirements","what":"CRAN Compliance","title":"Contributing to engager","text":"R CMD check passes (0 errors, 0 warnings) Package builds successfully examples run without errors global variable warnings License metadata correct","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"required-tools","dir":"","previous_headings":"Development Setup","what":"Required Tools","title":"Contributing to engager","text":"R >= 4.0.0 RStudio (recommended) Git AI agents: See GitHub CLI Best Practices detailed PR comment analysis","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"environment-setup","dir":"","previous_headings":"Development Setup","what":"Environment Setup","title":"Contributing to engager","text":"Fork repository Clone fork Install development dependencies: Load package development: Create new branch Make changes Run tests checks Submit pull request","code":"# Install devtools install.packages(\"devtools\")  # Install package dependencies devtools::install_deps()  # Install development dependencies devtools::install_dev_deps() devtools::load_all()"},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"development-environment","dir":"","previous_headings":"Development Setup","what":"Development Environment","title":"Contributing to engager","text":"","code":"# Load package for development devtools::load_all()  # Run tests devtools::test()  # Check package devtools::check()  # Build package devtools::build()  # Install package locally devtools::install()"},{"path":[]},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"critical-requirements","dir":"","previous_headings":"CRAN Preparation > CRAN Submission Requirements","what":"Critical Requirements","title":"Contributing to engager","text":"tests must pass (devtools::test()) Code coverage >90% (covr::package_coverage()) spelling errors (devtools::spell_check()) examples run (devtools::check_examples()) R CMD check passes 0 errors, 0 warnings (devtools::check()) Package builds successfully (devtools::build())","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"documentation-completeness","dir":"","previous_headings":"CRAN Preparation > CRAN Submission Requirements","what":"Documentation Completeness","title":"Contributing to engager","text":"exported functions complete roxygen2 documentation examples runnable tested README.md current comprehensive Vignettes created complex workflows missing documentation warnings","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"package-metadata","dir":"","previous_headings":"CRAN Preparation > CRAN Submission Requirements","what":"Package Metadata","title":"Contributing to engager","text":"DESCRIPTION correct version, license (MIT), dependencies NAMESPACE properly generated dependencies specified version constraints License file present correct","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"phase-1-pre-submission-validation-1-2-days","dir":"","previous_headings":"CRAN Preparation > CRAN Preparation Workflow","what":"Phase 1: Pre-Submission Validation (1-2 days)","title":"Contributing to engager","text":"","code":"# Run comprehensive validation devtools::check()                    # Full package check devtools::test()                     # Test suite covr::package_coverage()             # Coverage check devtools::spell_check()              # Spell check devtools::check_examples()           # Examples check devtools::build()                    # Build package"},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"phase-2-address-issues","dir":"","previous_headings":"CRAN Preparation > CRAN Preparation Workflow","what":"Phase 2: Address Issues","title":"Contributing to engager","text":"Test Coverage: Ensure >90% coverage R CMD Check: Resolve errors, warnings, notes Documentation: Update missing incomplete docs Examples: Ensure examples run without errors Spelling: Fix spelling errors","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"phase-3-final-validation-1-day","dir":"","previous_headings":"CRAN Preparation > CRAN Preparation Workflow","what":"Phase 3: Final Validation (1 day)","title":"Contributing to engager","text":"","code":"# Final validation checklist devtools::check()                    # Should be 0 errors, 0 warnings, 0 notes devtools::test()                     # Should be 0 failures covr::package_coverage()             # Should be >90% devtools::spell_check()              # Should be 0 errors devtools::check_examples()           # Should be 0 errors devtools::build()                    # Should create .tar.gz file"},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"phase-4-cran-submission","dir":"","previous_headings":"CRAN Preparation > CRAN Preparation Workflow","what":"Phase 4: CRAN Submission","title":"Contributing to engager","text":"Go https://cran.r-project.org/submit.html Upload package tarball Fill submission form Submit review Check email CRAN feedback Address issues promptly Resubmit needed","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"current-cran-status","dir":"","previous_headings":"CRAN Preparation","what":"Current CRAN Status","title":"Contributing to engager","text":"Overall Status: EXCELLENT - Close CRAN Ready Progress: 90% Complete Estimated Time: 1-2 weeks Confidence Level: HIGH Current Metrics: - ✅ Test Suite: 453 tests passing, 0 failures - 🔄 Code Coverage: 83.41% (target: 90%) - ✅ R CMD Check: 0 errors, 0 warnings, 3 notes - ✅ Documentation: Complete exported functions - ✅ Spell Check: 0 errors Remaining Tasks: - Test Coverage: Increase 90% (currently 83.41%) - R CMD Check Notes: Address 3 minor notes - Test Warnings: Clean 29 test warnings detailed CRAN preparation tracking, see CRAN_CHECKLIST.md.","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"release-process-1","dir":"","previous_headings":"","what":"Release Process","title":"Contributing to engager","text":"Create release/vX.Y.Z branch develop Update version DESCRIPTION Update NEWS.md Run R CMD check Submit CRAN Merge main tag release Merge back develop","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"development-workflow-1","dir":"","previous_headings":"Release Process","what":"Development Workflow","title":"Contributing to engager","text":"detailed pre-CRAN development workflow, including pre-PR validation, PR creation, merge processes, see Pre-CRAN Development Workflow section PROJECT.md. Key points: - Follow 4-phase pre-PR validation creating PRs - Use devtools::check() final validation - Consider bypassing branch protection confident changes - Link PRs issues using Fixes #X Closes #X","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"cran-submission-future","dir":"","previous_headings":"Release Process","what":"CRAN Submission (Future)","title":"Contributing to engager","text":"CRAN submission workflow package ready CRAN, see CRAN Submission Workflow section PROJECT.md.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"privacy-and-security","dir":"","previous_headings":"Ethical Development Practices","what":"Privacy and Security","title":"Contributing to engager","text":"Never log expose sensitive student data Always anonymize data examples tests Validate input prevent injection attacks Follow FERPA guidelines data handling Use secure practices file operations","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"equitable-participation","dir":"","previous_headings":"Ethical Development Practices","what":"Equitable Participation","title":"Contributing to engager","text":"Focus participation equity features Ensure inclusive design visualizations Consider accessibility implementations Document ethical considerations code","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"transparency","dir":"","previous_headings":"Ethical Development Practices","what":"Transparency","title":"Contributing to engager","text":"Document AI-assisted changes rationale Maintain clear audit trails modifications Provide clear explanations design decisions Include context commit messages","code":""},{"path":[]},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"test-failures","dir":"","previous_headings":"Troubleshooting > Common Issues","what":"Test Failures","title":"Contributing to engager","text":"Check test data function changes Verify test environment setup Review test assumptions edge cases Check missing dependencies","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"documentation-errors","dir":"","previous_headings":"Troubleshooting > Common Issues","what":"Documentation Errors","title":"Contributing to engager","text":"Run devtools::document() update roxygen2 Check syntax errors roxygen2 comments Verify examples runnable Check missing imports NAMESPACE","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"r-cmd-check-issues","dir":"","previous_headings":"Troubleshooting > Common Issues","what":"R CMD Check Issues","title":"Contributing to engager","text":"Review global variable warnings Check missing dependencies Verify file timestamps structure Ensure examples run without errors","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"performance-issues","dir":"","previous_headings":"Troubleshooting > Common Issues","what":"Performance Issues","title":"Contributing to engager","text":"Profile functions bottlenecks Use data.table large operations Implement chunking large files Consider parallel processing appropriate","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"when-stuck","dir":"","previous_headings":"Troubleshooting > Getting Help","what":"When Stuck","title":"Contributing to engager","text":"Check existing issues similar problems Review AI-Assisted Development Guide Run context scripts get current status Check PROJECT.md current priorities Create issue detailed information","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"for-complex-problems","dir":"","previous_headings":"Troubleshooting > Getting Help","what":"For Complex Problems","title":"Contributing to engager","text":"Include full error messages Provide minimal reproducible examples Include environment information Describe expected vs actual behavior Link related issues documentation","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions?","title":"Contributing to engager","text":"questions contributing, please: 1. Check documentation 2. Search existing issues 3. Create new issue “question” label","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"creating-issues","dir":"","previous_headings":"Questions?","what":"Creating Issues","title":"Contributing to engager","text":"Go GitHub repository Click “Issues” tab Click “New issue” Choose appropriate template list Fill template issue details Add appropriate labels Submit issue bug reports, include: - Clear description bug - Steps reproduce - Expected behavior - Minimal reproducible example - Environment details feature requests, include: - Clear description feature - Use case benefits - Implementation suggestions () - Related issues ()","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"documentation-1","dir":"","previous_headings":"Additional Resources","what":"Documentation","title":"Contributing to engager","text":"R Packages Book CRAN Repository Policy tidyverse style guide testthat documentation","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"tools","dir":"","previous_headings":"Additional Resources","what":"Tools","title":"Contributing to engager","text":"devtools package development roxygen2 documentation testthat testing styler code formatting lintr code quality covr test coverage","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"project-specific-guides","dir":"","previous_headings":"Additional Resources","what":"Project-Specific Guides","title":"Contributing to engager","text":"AI-Assisted Development Guide - Comprehensive AI guidelines PROJECT.md - Current project status priorities CRAN_CHECKLIST.md - CRAN submission checklist docs/development/ISSUE_MANAGEMENT_QUICK_REFERENCE.md - Issue workflow","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"best-practices","dir":"","previous_headings":"Additional Resources","what":"Best Practices","title":"Contributing to engager","text":"Follow R package development best practices Use consistent naming conventions Write comprehensive documentation Maintain high test coverage Regular code reviews updates","code":""},{"path":[]},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"regular-branch-pruning","dir":"","previous_headings":"Branch Management and Workflow Best Practices > Branch Lifecycle Management","what":"Regular Branch Pruning","title":"Contributing to engager","text":"Check merged branches: git branch -r --merged origin/main Verify unmerged work: git log --oneline <branch> --origin/main Prune remote references: git fetch --prune Document decisions: Record branch pruning rationale","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"branch-status-analysis","dir":"","previous_headings":"Branch Management and Workflow Best Practices > Branch Lifecycle Management","what":"Branch Status Analysis","title":"Contributing to engager","text":"","code":"# List all remote branches git branch -r  # Check which branches are merged git branch -r --merged origin/main  # See commits ahead of main git log --oneline <branch> --not origin/main  # View commit statistics git show --stat <commit-hash>"},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"pre-pr-validation-1","dir":"","previous_headings":"Branch Management and Workflow Best Practices > Pull Request Workflow","what":"Pre-PR Validation","title":"Contributing to engager","text":"","code":"# Run comprehensive validation Rscript scripts/pre-pr-validation.R  # Commit context updates git add docs/development/archive/issue-160/README.md git commit -m \"chore(context): save context files before PR\"  # Push to remote git push origin <branch-name>"},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"pr-creation-and-merge","dir":"","previous_headings":"Branch Management and Workflow Best Practices > Pull Request Workflow","what":"PR Creation and Merge","title":"Contributing to engager","text":"","code":"# Create PR with detailed description gh pr create --title \"type: description\" --body \"## Summary...\"  # Merge with admin override (if needed) gh pr merge <PR_NUMBER> --merge --admin  # Clean up local branch git checkout main git pull origin main git branch -d <branch-name>"},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"automatic-conflict-resolution","dir":"","previous_headings":"Branch Management and Workflow Best Practices > Git Merge Strategy Insights","what":"Automatic Conflict Resolution","title":"Contributing to engager","text":"ORT Strategy: Git’s “Ostensibly Recursive’s Twin” strategy can automatically handle compatible changes Manual Resolution: Sometimes appears conflicts actually compatible changes Smart Merging: Git recognizes changes can merged without manual intervention","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"best-practices-1","dir":"","previous_headings":"Branch Management and Workflow Best Practices > Git Merge Strategy Insights","what":"Best Practices","title":"Contributing to engager","text":"Always test merges: Use git merge main test compatibility Document findings: Record lessons learned merge strategies Regular cleanup: Prevent repository bloat systematic pruning","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"successfully-pruned-branches","dir":"","previous_headings":"Branch Management and Workflow Best Practices > Recent Branch Pruning Experience (2025-08-13)","what":"Successfully Pruned Branches","title":"Contributing to engager","text":"✅ origin/feature/status-update-2025-08-08 - Status documentation (merged) ✅ origin/fix/name-matching-privacy-masking-issue-160 - Privacy implementation (merged) ✅ origin/cursor/prepare-product-requirements-document--realignment-e85c - PRD updates (merged) ✅ origin/cursor/user-perspective-review--r-package-45f9 - Issue backup functionality (merged)","code":""},{"path":"https://revgizmo.github.io/engager/CONTRIBUTING.html","id":"key-learnings","dir":"","previous_headings":"Branch Management and Workflow Best Practices > Recent Branch Pruning Experience (2025-08-13)","what":"Key Learnings","title":"Contributing to engager","text":"Git Merge Strategy Sophistication: ORT strategy automatically handled “conflicts” weren’t actually conflicts Compatible Changes: Despite overlapping work, changes compatible merged cleanly Automatic Conflict Resolution: Git recognized changes merged without manual intervention Branch Lifecycle Management: Regular pruning prevents repository bloat confusion detailed refactoring roadmap branch management tasks, see .github/ISSUES/refactor/011-repo-hygiene--data.md.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"pr-details","dir":"","previous_headings":"","what":"PR Details","title":"PR 405 Approval Checklist","text":"PR Number: 405 Title: docs(pr-process): document temporary CI block local-validation self-merge policy Type: Documentation Files Changed: 2 files (+13, -0 lines)","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"id_-content-accuracy","dir":"","previous_headings":"Pre-Approval Verification","what":"✅ Content Accuracy","title":"PR 405 Approval Checklist","text":"CI status correctly documented (blocked per Issue #406) Required scripts exist functional Policy criteria clear auditable Issue reference (#406) correct Temporary nature clearly stated","code":""},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"id_-implementation-verification","dir":"","previous_headings":"Pre-Approval Verification","what":"✅ Implementation Verification","title":"PR 405 Approval Checklist","text":"Rscript scripts/pre-pr-validation.R exists runs successfully ./scripts/save-context.sh exists functional Documentation changes minimal focused files consistent policy sections","code":""},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"id_-cran-compliance","dir":"","previous_headings":"Pre-Approval Verification","what":"✅ CRAN Compliance","title":"PR 405 Approval Checklist","text":"code changes affect CRAN submission Documentation-change functional changes package Process improvement, regression","code":""},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"id_-security-and-privacy","dir":"","previous_headings":"Pre-Approval Verification","what":"✅ Security and Privacy","title":"PR 405 Approval Checklist","text":"security concerns (documentation ) privacy implications Process documentation improves safety Audit trail requirements included","code":""},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"id_-code-quality","dir":"","previous_headings":"Pre-Approval Verification","what":"✅ Code Quality","title":"PR 405 Approval Checklist","text":"Documentation clear consistent Content well-structured Formatting matches existing style References accurate","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"id_-content-accuracy-1","dir":"","previous_headings":"Approval Criteria","what":"✅ Content Accuracy","title":"PR 405 Approval Checklist","text":"information current correct CI status accurately reflects current state Required scripts verified exist work Policy criteria clear implementable","code":""},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"id_-implementation-verification-1","dir":"","previous_headings":"Approval Criteria","what":"✅ Implementation Verification","title":"PR 405 Approval Checklist","text":"Local validation script runs successfully Save context script exists functional Documentation changes minimal focused breaking changes introduced","code":""},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"id_-risk-assessment","dir":"","previous_headings":"Approval Criteria","what":"✅ Risk Assessment","title":"PR 405 Approval Checklist","text":"Low risk (documentation ) Temporary policy (removed) Clear benefits outweigh minimal risks Process improvement, regression","code":""},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"id_-documentation-quality","dir":"","previous_headings":"Approval Criteria","what":"✅ Documentation Quality","title":"PR 405 Approval Checklist","text":"Content clear understandable Policy well-structured Consistent across files Appropriate temporary nature","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"id_-approved-for-merge","dir":"","previous_headings":"Final Approval Decision","what":"✅ APPROVED FOR MERGE","title":"PR 405 Approval Checklist","text":"Rationale: 1. Content Accurate: information verified current correct 2. Implementation Verified: Required scripts exist function properly 3. Low Risk: Documentation-change clear benefits 4. Temporary Nature: removed CI restored 5. Process Improvement: Provides clear guidance CI downtime blocking issues identified.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"standard-merge-process","dir":"","previous_headings":"Merge Instructions","what":"Standard Merge Process","title":"PR 405 Approval Checklist","text":"","code":"# Merge PR 405 gh pr merge 405 --merge --admin"},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"post-merge-validation","dir":"","previous_headings":"Merge Instructions","what":"Post-Merge Validation","title":"PR 405 Approval Checklist","text":"Verify merge completed successfully Confirm documentation updated Check policy now effect Update related documentation needed","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_405_APPROVAL_CHECKLIST.html","id":"id_-all-criteria-met","dir":"","previous_headings":"Success Criteria","what":"✅ All Criteria Met","title":"PR 405 Approval Checklist","text":"Content accuracy verified Implementation verified CRAN compliance issues security concerns Low risk assessment Clear benefits identified PR 405 ready immediate merge.","code":""},{"path":[]},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_CHANGES_SUMMARY.html","id":"id_1-cran-compliance-","dir":"","previous_headings":"What Was Accomplished","what":"1. CRAN Compliance ✅","title":"PR 476 Changes Summary","text":"Non-ASCII Characters: Removed emojis bullet points R code NAMESPACE: Cleaned imports (magrittr::%>% imported) Function Calls: Qualified utils::help() utils::str() calls Result: Package now passes CRAN non-ASCII character checks","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_CHANGES_SUMMARY.html","id":"id_2-ux-system-implementation-","dir":"","previous_headings":"What Was Accomplished","what":"2. UX System Implementation ✅","title":"PR 476 Changes Summary","text":"Progressive Disclosure: 4 UX levels (basic, common, advanced, expert) User-Friendly Functions: basic_transcript_analysis(), show_getting_started(), etc. Error Handling: user_friendly_error() wrapper helpful messages Function Discovery: find_function_for_task(), show_available_functions() Result: Much accessible package new users","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_CHANGES_SUMMARY.html","id":"id_3-critical-bug-fix-","dir":"","previous_headings":"What Was Accomplished","what":"3. Critical Bug Fix ✅","title":"PR 476 Changes Summary","text":"Logging System: Fixed .zse_get_logs_env() maintain persistent data Problem: returning fresh empty lists, losing log data Solution: Implemented proper environment persistence Result: Privacy/security logging now works correctly","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_CHANGES_SUMMARY.html","id":"id_4-clean-ascii-design-","dir":"","previous_headings":"What Was Accomplished","what":"4. Clean ASCII Design ✅","title":"PR 476 Changes Summary","text":"Professional Appearance: Removed emojis academic/research context Better Accessibility: Works screen readers terminals CRAN Compliance: non-ASCII character warnings Result: Package suitable institutional use CRAN submission","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_CHANGES_SUMMARY.html","id":"new-ux-files","dir":"","previous_headings":"Files Created/Modified","what":"New UX Files","title":"PR 476 Changes Summary","text":"R/ux_basic_workflow.R - Main workflow functions R/ux_error_handling.R - Error handling system R/ux_guidance_system.R - Help guidance R/ux_interactive_help.R - Interactive help R/ux_visibility_system.R - Progressive disclosure","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_CHANGES_SUMMARY.html","id":"modified-files","dir":"","previous_headings":"Files Created/Modified","what":"Modified Files","title":"PR 476 Changes Summary","text":"NAMESPACE - Cleaned exports imports R/zzz.R - Clean ASCII startup message R/utils_diagnostics.R - Fixed logging system Multiple R files - Added utils:: prefixes","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_CHANGES_SUMMARY.html","id":"key-benefits","dir":"","previous_headings":"","what":"Key Benefits","title":"PR 476 Changes Summary","text":"CRAN Ready: non-ASCII character warnings User Friendly: Progressive disclosure system different skill levels Professional: Clean ASCII design appropriate academic use Accessible: Works screen readers terminals Maintainable: Proper logging system error handling","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_CHANGES_SUMMARY.html","id":"implementation-approach","dir":"","previous_headings":"","what":"Implementation Approach","title":"PR 476 Changes Summary","text":"Instead complex git merges, recommended approach : Document changes (file) Create implementation guide (PR_476_IMPLEMENTATION_GUIDE.md) Apply changes cran-submission-v0.1.0 branch directly Validate devtools::check() avoids merge conflicts ensures clean implementation target branch.","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_CHANGES_SUMMARY.html","id":"current-status","dir":"","previous_headings":"","what":"Current Status","title":"PR 476 Changes Summary","text":"✅ CRAN compliance issues resolved ✅ UX system fully implemented ✅ Critical logging bug fixed ✅ Clean ASCII design applied ⚠️ test failures remain (unrelated changes) ⚠️ Linting issues need attention package now much suitable CRAN submission user adoption.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"document provides complete implementation guide applying UX simplification CRAN compliance fixes PR 476 cran-submission-v0.1.0 branch.","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"why-these-changes-were-made","dir":"","previous_headings":"","what":"Why These Changes Were Made","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Problem: CRAN rejected package due non-ASCII characters import issues Solution: Replace emojis meaningful ASCII alternatives, clean imports Rationale: Maintains user experience ensuring CRAN compliance Benefit: Package becomes suitable academic/research use CRAN submission","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"change-dependencies","dir":"","previous_headings":"","what":"Change Dependencies","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"UX system requires: NAMESPACE updates, startup message changes Logging fix requires: utils_diagnostics.R modification ASCII cleanup requires: UX files + zzz.R + success_metrics.R Function qualification requires: Multiple R files unqualified calls","code":""},{"path":[]},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"non-ascii-character-removal","dir":"","previous_headings":"Key Changes Made > 1. CRAN Compliance Fixes ✅","what":"Non-ASCII Character Removal","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Files Modified: UX-related R files Change: Replaced emoji characters bullet points ASCII alternatives 🎯 → TARGET: ==> 📊 → RESULTS: ❌ → ERROR: 💡 → TIP: • → -","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"namespace-cleanup","dir":"","previous_headings":"Key Changes Made > 1. CRAN Compliance Fixes ✅","what":"NAMESPACE Cleanup","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Change: Removed importFrom statements except magrittr::%>% Rationale: Follows CRAN best practice using package::function syntax Files: NAMESPACE","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"function-call-qualification","dir":"","previous_headings":"Key Changes Made > 1. CRAN Compliance Fixes ✅","what":"Function Call Qualification","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Change: Added utils:: prefix unqualified function calls Files: Multiple R files help() → utils::help() str() → utils::str()","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"new-files-created","dir":"","previous_headings":"Key Changes Made > 2. UX System Implementation ✅","what":"New Files Created","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"R/ux_basic_workflow.R - Main workflow functions R/ux_error_handling.R - User-friendly error handling R/ux_guidance_system.R - Help guidance functions R/ux_interactive_help.R - Interactive help system R/ux_visibility_system.R - Progressive disclosure system","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"key-functions-added","dir":"","previous_headings":"Key Changes Made > 2. UX System Implementation ✅","what":"Key Functions Added","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"basic_transcript_analysis() - Main entry point new users show_getting_started() - Getting started guide show_available_functions() - Function discovery find_function_for_task() - Task-based function finding set_ux_level() - Progressive disclosure control user_friendly_error() - Error handling wrapper","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"problem-fixed","dir":"","previous_headings":"Key Changes Made > 3. Logging System Fix ✅","what":"Problem Fixed","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Issue: .zse_get_logs_env() returning fresh empty lists, losing log data Solution: Implemented persistent environment storage File: R/utils_diagnostics.R","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"implementation","dir":"","previous_headings":"Key Changes Made > 3. Logging System Fix ✅","what":"Implementation","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"","code":".zse_get_logs_env <- function() {   # Create a persistent environment for package logs   if (!exists(\".zse_logs_env\", envir = .GlobalEnv)) {     .GlobalEnv$.zse_logs_env <- new.env(parent = emptyenv())     .GlobalEnv$.zse_logs_env$logs <- list()   }   return(.GlobalEnv$.zse_logs_env) }"},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"file-rzzzr","dir":"","previous_headings":"Key Changes Made > 4. Package Startup Message ✅","what":"File: R/zzz.R","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Change: Updated startup message clean ASCII design Added: UX function categories global variables Removed: emoji characters startup message","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"pre-implementation","dir":"","previous_headings":"Implementation Checklist","what":"Pre-Implementation","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Create feature branch: git checkout -b feature/pr476-implementation Verify clean working directory: git status Review implementation guide: Read document completely Check dependencies: Ensure R devtools available","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"phase-1-cran-compliance","dir":"","previous_headings":"Implementation Checklist","what":"Phase 1: CRAN Compliance","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Remove non-ASCII characters (see automated script ) Fix NAMESPACE imports (remove except magrittr) Qualify function calls (add utils:: prefixes) Run validation: R CMD check show 0 errors, 0 warnings","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"phase-2-ux-system","dir":"","previous_headings":"Implementation Checklist","what":"Phase 2: UX System","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Copy UX files (5 new files) Update startup message (clean ASCII) Fix logging system (persistent environment) Test UX functions: Verify work correctly","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"phase-3-validation--polish","dir":"","previous_headings":"Implementation Checklist","what":"Phase 3: Validation & Polish","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Run full test suite: devtools::test() Check linting: lintr::lint_package() Verify documentation: devtools::document() Performance check: Ensure significant slowdown Final validation: devtools::check()","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"step-1-create-feature-branch","dir":"","previous_headings":"Implementation Steps for New Agent","what":"Step 1: Create Feature Branch","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"","code":"# Start from the target branch git checkout cran-submission-v0.1.0 git pull origin cran-submission-v0.1.0  # Create new feature branch for our work git checkout -b feature/pr476-implementation  # Verify we're on the new branch git branch --show-current"},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"id_21-automated-non-ascii-character-removal","dir":"","previous_headings":"Implementation Steps for New Agent > Step 2: Apply CRAN Compliance Fixes","what":"2.1 Automated Non-ASCII Character Removal","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Create run script remove non-ASCII characters:","code":"#!/bin/bash # fix_non_ascii.sh  echo \"Removing non-ASCII characters from R files...\"  # Replace emoji characters with ASCII alternatives find R/ -name \"*.R\" -exec sed -i '' 's/🎯/TARGET:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/📊/RESULTS:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/❌/ERROR:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/💡/TIP:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/✅/SUCCESS:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/📁/DIR:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/📄/FILE:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/🔒/PRIVACY:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/🎉/COMPLETE:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/🚀/QUICK:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/🔄/BATCH:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/📈/STATS:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/⚙️/TOOLS:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/🛡️/PROTECT:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/⚖️/ETHICS:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/📋/LIST:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/🔧/ADVANCED:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/🌟/ESSENTIAL:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/🔍/FIND:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/📝/DESC:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/📅/DATE:/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/🧪/TEST:/g' {} \\;  # Replace bullet points find R/ -name \"*.R\" -exec sed -i '' 's/•/-/g' {} \\;  # Replace arrow characters find R/ -name \"*.R\" -exec sed -i '' 's/→/->/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/≤/<=/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/≥/>=/g' {} \\;  echo \"Non-ASCII character removal complete!\""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"id_22-fix-function-call-qualification","dir":"","previous_headings":"Implementation Steps for New Agent > Step 2: Apply CRAN Compliance Fixes","what":"2.2 Fix Function Call Qualification","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"","code":"#!/bin/bash # fix_function_calls.sh  echo \"Fixing unqualified function calls...\"  # Add utils:: prefix to unqualified calls find R/ -name \"*.R\" -exec sed -i '' 's/\\bhelp(/utils::help(/g' {} \\; find R/ -name \"*.R\" -exec sed -i '' 's/\\bstr(/utils::str(/g' {} \\;  echo \"Function call qualification complete!\""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"id_22-fix-namespace","dir":"","previous_headings":"Implementation Steps for New Agent > Step 2: Apply CRAN Compliance Fixes","what":"2.2 Fix NAMESPACE","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Remove importFrom statements except importFrom(magrittr,\"%>%\") Keep valid function exports Remove invalid exports (strings, non-function names)","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"id_23-fix-function-calls","dir":"","previous_headings":"Implementation Steps for New Agent > Step 2: Apply CRAN Compliance Fixes","what":"2.3 Fix Function Calls","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Find unqualified help() calls → utils::help() Find unqualified str() calls → utils::str() Search pattern: \\bhelp\\( \\bstr\\(","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"id_31-create-ux-files","dir":"","previous_headings":"Implementation Steps for New Agent > Step 3: Implement UX System","what":"3.1 Create UX Files","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Copy following files branch: - R/ux_basic_workflow.R - R/ux_error_handling.R - R/ux_guidance_system.R - R/ux_interactive_help.R - R/ux_visibility_system.R","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"id_32-update-package-startup","dir":"","previous_headings":"Implementation Steps for New Agent > Step 3: Implement UX System","what":"3.2 Update Package Startup","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Update R/zzz.R clean ASCII startup message Add UX function categories global variables Remove emoji characters","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"id_33-fix-logging-system","dir":"","previous_headings":"Implementation Steps for New Agent > Step 3: Implement UX System","what":"3.3 Fix Logging System","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Update R/utils_diagnostics.R persistent logging implementation Ensure .zse_get_logs_env() maintains data across calls","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"step-4-update-documentation","dir":"","previous_headings":"Implementation Steps for New Agent","what":"Step 4: Update Documentation","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Regenerate NAMESPACE devtools::document() Update man/ files devtools::document() Rebuild README devtools::build_readme()","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"step-5-validation","dir":"","previous_headings":"Implementation Steps for New Agent","what":"Step 5: Validation","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Run devtools::check() ensure 0 errors, 0 warnings Run devtools::test() check test status Run styler::style_pkg() code formatting Run lintr::lint_package() check remaining issues","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"new-files-to-add","dir":"","previous_headings":"Files to Copy/Modify","what":"New Files to Add","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"R/ux_basic_workflow.R R/ux_error_handling.R R/ux_guidance_system.R R/ux_interactive_help.R R/ux_visibility_system.R","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"files-to-modify","dir":"","previous_headings":"Files to Copy/Modify","what":"Files to Modify","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"NAMESPACE - Remove invalid exports imports R/zzz.R - Clean ASCII startup message R/utils_diagnostics.R - Fix logging system R files unqualified function calls","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"automated-validation-script","dir":"","previous_headings":"","what":"Automated Validation Script","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"Create validation script verify changes:","code":"# validation_script.R library(devtools) library(lintr)  cat(\"🔍 Running PR 476 Implementation Validation...\\n\\n\")  # 1. CRAN Compliance Check cat(\"1. Checking CRAN compliance...\\n\") check_result <- check() if (check_result$errors > 0) {   cat(\"❌ CRAN check failed with\", check_result$errors, \"errors\\n\")   stop(\"CRAN compliance check failed\") } else if (check_result$warnings > 0) {   cat(\"⚠️  CRAN check has\", check_result$warnings, \"warnings\\n\") } else {   cat(\"✅ CRAN check passed (0 errors, 0 warnings)\\n\") }  # 2. Test Suite cat(\"\\n2. Running test suite...\\n\") test_result <- test() if (test_result$failed > 0) {   cat(\"❌ Tests failed:\", test_result$failed, \"failures\\n\") } else {   cat(\"✅ All tests passed\\n\") }  # 3. Linting Check cat(\"\\n3. Checking code quality...\\n\") lint_result <- lint_package() lint_count <- length(lint_result) if (lint_count > 50) {   cat(\"⚠️  High number of linting issues:\", lint_count, \"\\n\") } else if (lint_count > 0) {   cat(\"ℹ️  Linting issues found:\", lint_count, \"\\n\") } else {   cat(\"✅ No linting issues found\\n\") }  # 4. Non-ASCII Character Check cat(\"\\n4. Checking for non-ASCII characters...\\n\") r_files <- list.files(\"R\", pattern = \"\\\\.R$\", full.names = TRUE) non_ascii_found <- FALSE for (file in r_files) {   content <- readLines(file, warn = FALSE)   for (i in seq_along(content)) {     if (grepl(\"[^\\x00-\\x7F]\", content[i])) {       cat(\"❌ Non-ASCII character found in\", file, \"line\", i, \"\\n\")       non_ascii_found <- TRUE     }   } } if (!non_ascii_found) {   cat(\"✅ No non-ASCII characters found\\n\") }  # 5. UX Functions Test cat(\"\\n5. Testing UX functions...\\n\") tryCatch({   load_all()   show_getting_started()   show_available_functions()   cat(\"✅ UX functions working correctly\\n\") }, error = function(e) {   cat(\"❌ UX functions test failed:\", e$message, \"\\n\") })  # 6. Logging System Test cat(\"\\n6. Testing logging system...\\n\") tryCatch({   env1 <- .zse_get_logs_env()   env1$logs$test <- \"test log\"   env2 <- .zse_get_logs_env()   if (!is.null(env2$logs$test)) {     cat(\"✅ Logging system working correctly\\n\")   } else {     cat(\"❌ Logging system not persistent\\n\")   } }, error = function(e) {   cat(\"❌ Logging system test failed:\", e$message, \"\\n\") })  cat(\"\\n🎯 Validation complete!\\n\")"},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"success-criteria","dir":"","previous_headings":"","what":"Success Criteria","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"CRAN Compliance: R CMD check passes 0 errors, 0 warnings Non-ASCII Clean: emoji characters removed R code NAMESPACE Clean: valid exports minimal imports Function Calls: properly qualified package prefixes UX System: functions working correctly Logging System: Maintains data persistence across calls Code Quality: Linting issues minimized Documentation: new functions proper roxygen2 docs Testing: Test suite passes shows minimal failures Performance: significant performance degradation","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"step-4-final-integration","dir":"","previous_headings":"Success Criteria","what":"Step 4: Final Integration","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"","code":"# After all changes are complete and validated git add . git commit -m \"feat: Implement PR 476 UX simplification and CRAN compliance  - Remove all non-ASCII characters (emojis, bullet points, arrows) - Fix NAMESPACE imports (keep only magrittr) - Qualify function calls with package prefixes - Add UX system with progressive disclosure - Fix logging system for data persistence - Ensure CRAN compliance (0 errors, 0 warnings)\"  # Push feature branch git push origin feature/pr476-implementation  # Create PR to merge into cran-submission-v0.1.0 gh pr create --title \"feat: UX simplification and CRAN compliance fixes\" \\   --body \"Implements PR 476 changes: - CRAN compliance fixes (non-ASCII, imports, function calls) - UX system with progressive disclosure - Clean ASCII design throughout - Persistent logging system - All tests passing, 0 CRAN errors/warnings\" \\   --base cran-submission-v0.1.0"},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"notes","dir":"","previous_headings":"","what":"Notes","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"UX system provides progressive disclosure different user levels emoji characters replaced meaningful ASCII alternatives logging system now properly maintains data across function calls Work done feature branch, merged via PR - never directly cran-submission-v0.1.0 implementation maintains privacy-first approach original package","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_IMPLEMENTATION_GUIDE.html","id":"current-status","dir":"","previous_headings":"","what":"Current Status","title":"PR 476 Implementation Guide: UX Simplification & CRAN Compliance","text":"✅ CRAN compliance issues resolved ✅ UX system implemented ✅ Logging system fixed ✅ Clean ASCII design applied ⚠️ test failures remain (unrelated changes) ⚠️ Linting issues need attention implementation guide provides everything needed re-implement changes cran-submission-v0.1.0 branch.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"strategy-overview","dir":"","previous_headings":"","what":"Strategy Overview","title":"PR 476 Strategy Summary: Document and Re-implement","text":"Instead complex Git rebasing/merging, ’ve created comprehensive “document re-implement” strategy transfer PR 476 changes cran-submission-v0.1.0 branch.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"id_-documentation","dir":"","previous_headings":"What We’ve Created","what":"📋 Documentation","title":"PR 476 Strategy Summary: Document and Re-implement","text":"PR_476_IMPLEMENTATION_GUIDE.md: Complete step--step implementation guide PR_476_CHANGES_SUMMARY.md: Concise overview changes made PR_476_STRATEGY_SUMMARY.md: summary document","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"id_-automated-scripts","dir":"","previous_headings":"What We’ve Created","what":"🔧 Automated Scripts","title":"PR 476 Strategy Summary: Document and Re-implement","text":"scripts/fix_non_ascii.sh: Removes emoji non-ASCII characters scripts/fix_function_calls.sh: Fixes unqualified function calls scripts/validation_script.R: Comprehensive validation changes scripts/implement_pr476.sh: Master implementation script","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"id_-key-improvements-made","dir":"","previous_headings":"What We’ve Created","what":"✅ Key Improvements Made","title":"PR 476 Strategy Summary: Document and Re-implement","text":"Enhanced Context: Added changes made dependencies Automated Scripts: Created bash/R scripts common operations Comprehensive Validation: Multi-phase validation detailed reporting Implementation Checklist: Step--step checklist phases Rollback Plan: Backup branch creation safety measures","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"phase-1-cran-compliance","dir":"","previous_headings":"Implementation Strategy","what":"Phase 1: CRAN Compliance","title":"PR 476 Strategy Summary: Document and Re-implement","text":"Remove non-ASCII characters (emojis, bullet points, arrows) Fix NAMESPACE imports (keep magrittr) Qualify function calls (add utils:: prefixes) Validate R CMD check","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"phase-2-ux-system","dir":"","previous_headings":"Implementation Strategy","what":"Phase 2: UX System","title":"PR 476 Strategy Summary: Document and Re-implement","text":"Copy 5 new UX files feature branch Update startup message clean ASCII design Fix logging system data persistence Test UX functions","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"phase-3-validation--polish","dir":"","previous_headings":"Implementation Strategy","what":"Phase 3: Validation & Polish","title":"PR 476 Strategy Summary: Document and Re-implement","text":"Run comprehensive test suite Check code quality lintr Verify documentation completeness Final CRAN compliance check","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"success-criteria","dir":"","previous_headings":"","what":"Success Criteria","title":"PR 476 Strategy Summary: Document and Re-implement","text":"✅ CRAN compliance: 0 errors, 0 warnings ✅ non-ASCII characters removed ✅ NAMESPACE clean (minimal imports) ✅ Function calls properly qualified ✅ UX system working correctly ✅ Logging system persistent ✅ Code quality maintained","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"new-files","dir":"","previous_headings":"Files Created/Modified","what":"New Files","title":"PR 476 Strategy Summary: Document and Re-implement","text":"PR_476_IMPLEMENTATION_GUIDE.md (355 lines) PR_476_CHANGES_SUMMARY.md (concise overview) scripts/fix_non_ascii.sh (executable) scripts/fix_function_calls.sh (executable) scripts/validation_script.R (comprehensive validation) scripts/implement_pr476.sh (master script)","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"enhanced-files","dir":"","previous_headings":"Files Created/Modified","what":"Enhanced Files","title":"PR 476 Strategy Summary: Document and Re-implement","text":"PR_476_IMPLEMENTATION_GUIDE.md: Added context, dependencies, automated scripts, validation, success criteria","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"next-steps-for-new-agent","dir":"","previous_headings":"","what":"Next Steps for New Agent","title":"PR 476 Strategy Summary: Document and Re-implement","text":"Start target branch: git checkout cran-submission-v0.1.0 Run master script: ./scripts/implement_pr476.sh (creates feature branch automatically) Copy UX files: original feature branch new feature branch Validate results: Review output files Commit changes: descriptive commit message Push feature branch: git push origin feature/pr476-implementation Create PR: Merge feature branch cran-submission-v0.1.0","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"risk-mitigation","dir":"","previous_headings":"","what":"Risk Mitigation","title":"PR 476 Strategy Summary: Document and Re-implement","text":"Feature branch workflow: Never modify cran-submission-v0.1.0 directly Phased approach: phase validated proceeding Comprehensive validation: Multiple checks step Easy rollback: Can delete feature branch issues arise PR review: Changes reviewed merging main branch","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"assessment--will-work","dir":"","previous_headings":"","what":"Assessment: ✅ WILL WORK","title":"PR 476 Strategy Summary: Document and Re-implement","text":"strategy comprehensive, well-documented, includes necessary safeguards. automated scripts reduce human error, phased approach allows validation step.","code":""},{"path":"https://revgizmo.github.io/engager/PR_476_STRATEGY_SUMMARY.html","id":"benefits-of-this-approach","dir":"","previous_headings":"","what":"Benefits of This Approach","title":"PR 476 Strategy Summary: Document and Re-implement","text":"Avoids Git complexity: merge conflicts resolve Clear documentation: Every change documented Automated validation: Reduces human error Focused implementation: Clean, targeted changes Easy rollback: Simple revert needed Transferable: New agent can follow guide exactly strategy successfully transforms complex Git operation clear, documented, automated process agent can follow implement PR 476 changes target branch.","code":""},{"path":"https://revgizmo.github.io/engager/PR_534_APPROVAL_CHECKLIST.html","id":null,"dir":"","previous_headings":"","what":"PR 534 Approval Checklist","title":"PR 534 Approval Checklist","text":"PR: https://github.com/revgizmo/engager/pull/534 Title: [engager] ensure pkgdown site rebuilds engager branding Head: codex/remove-references--zoom-student-engagement → Base: main","code":""},{"path":"https://revgizmo.github.io/engager/PR_534_APPROVAL_CHECKLIST.html","id":"preconditions","dir":"","previous_headings":"","what":"Preconditions","title":"PR 534 Approval Checklist","text":"PR rebased latest main conflicts resolved CI workflows green (checks passing) draft PR","code":""},{"path":"https://revgizmo.github.io/engager/PR_534_APPROVAL_CHECKLIST.html","id":"cran-compliance","dir":"","previous_headings":"","what":"CRAN Compliance","title":"PR 534 Approval Checklist","text":"R CMD check: 0 errors, 0 warnings devtools::test(): tests pass Coverage ≥ 90% (covr) devtools::check_examples(): examples run devtools::spell_check(): issues devtools::build(): succeeds","code":""},{"path":"https://revgizmo.github.io/engager/PR_534_APPROVAL_CHECKLIST.html","id":"documentation-and-branding","dir":"","previous_headings":"","what":"Documentation and Branding","title":"PR 534 Approval Checklist","text":"_pkgdown.yml updated Engager branding README vignettes reflect Engager Pkgdown site builds cleanly shows Engager docs/brand-reference-audit.md reviewed blockers resolved","code":""},{"path":"https://revgizmo.github.io/engager/PR_534_APPROVAL_CHECKLIST.html","id":"code-quality-and-style","dir":"","previous_headings":"","what":"Code Quality and Style","title":"PR 534 Approval Checklist","text":"styler::style_pkg() applied lintr::lint_package() warnings addressed legacy zoomstudentengagement identifiers remain","code":""},{"path":"https://revgizmo.github.io/engager/PR_534_APPROVAL_CHECKLIST.html","id":"security-and-privacy","dir":"","previous_headings":"","what":"Security and Privacy","title":"PR 534 Approval Checklist","text":"secrets workflows code sensitive data examples docs","code":""},{"path":"https://revgizmo.github.io/engager/PR_534_APPROVAL_CHECKLIST.html","id":"merge","dir":"","previous_headings":"","what":"Merge","title":"PR 534 Approval Checklist","text":"Squash merge prepared clear message Post-merge pkgdown publish verified Feature branch cleaned ","code":""},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Essential Functions - Core Package Functionality","text":"vignette demonstrates core functionality engager package using essential functions. scope reduction, package now exports 26 essential functions focused : Transcript Processing: Loading processing Zoom transcripts Privacy Protection: Ensuring FERPA compliance data privacy Analysis: Core engagement metrics analysis Name Matching: Safe student name matching workflows","code":""},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"essential-functions","dir":"Articles","previous_headings":"","what":"Essential Functions","title":"Essential Functions - Core Package Functionality","text":"package now exports essential functions:","code":"library(engager) #> Welcome to engager! #> - Start with: vignette('getting-started', package='engager') #> - Core functions: vignette('essential-functions', package='engager') #> - Sample data: system.file('extdata/transcripts', package='engager') #> - Quick example: example(summarize_transcript_metrics) #>  #> To suppress this message: options(engager.show_startup = FALSE)  # Get list of exported functions (essential functions) exported_functions <- names(getNamespaceExports(\"engager\")) essential_functions <- exported_functions[!exported_functions %in% c(\"%>%\")] # Exclude pipe operator cat(\"Essential functions (\", length(essential_functions), \"):\\n\") #> Essential functions ( 0 ): cat(paste(\"-\", essential_functions), sep = \"\\n\") #> -"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"load-and-process-transcript","dir":"Articles","previous_headings":"Core Workflow","what":"1. Load and Process Transcript","title":"Essential Functions - Core Package Functionality","text":"","code":"# Load a sample transcript transcript_file <- system.file(\"extdata/transcripts/GMT20240124-202901_Recording.transcript.vtt\",   package = \"engager\" )  # Load the transcript transcript <- load_zoom_transcript(transcript_file) cat(\"Transcript loaded with\", nrow(transcript), \"comments\\n\") #> Transcript loaded with 102 comments"},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"process-with-privacy-protection","dir":"Articles","previous_headings":"Core Workflow","what":"2. Process with Privacy Protection","title":"Essential Functions - Core Package Functionality","text":"","code":"# Process transcript with privacy defaults processed <- process_zoom_transcript(   transcript_df = transcript,   add_dead_air = TRUE,   consolidate_comments = TRUE )  cat(\"Processed transcript has\", nrow(processed), \"rows\\n\") #> Processed transcript has 90 rows"},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"analyze-engagement","dir":"Articles","previous_headings":"Core Workflow","what":"3. Analyze Engagement","title":"Essential Functions - Core Package Functionality","text":"","code":"# Analyze transcripts for engagement metrics # Note: This would normally analyze actual transcript files # For this example, we'll demonstrate the function call structure cat(\"analyze_transcripts() would analyze all .vtt files in the specified folder\\n\") #> analyze_transcripts() would analyze all .vtt files in the specified folder cat(\"Function signature: analyze_transcripts(transcripts_folder, names_to_exclude, write, output_path)\\n\") #> Function signature: analyze_transcripts(transcripts_folder, names_to_exclude, write, output_path)"},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"privacy-and-compliance","dir":"Articles","previous_headings":"Core Workflow","what":"4. Privacy and Compliance","title":"Essential Functions - Core Package Functionality","text":"","code":"# Check privacy compliance with synthetic data synthetic_data <- data.frame(   name = c(\"Student A\", \"Student B\", \"Instructor\"),   message = c(\"Hello\", \"Good morning\", \"Welcome to class\"),   timestamp = c(\"00:01:00\", \"00:02:00\", \"00:00:30\") )  # Note: Privacy compliance functions would check for real names in data cat(\"Privacy compliance functions validate that no real names are exposed\\n\") #> Privacy compliance functions validate that no real names are exposed cat(\"validate_privacy_compliance() and validate_ferpa_compliance() ensure FERPA compliance\\n\") #> validate_privacy_compliance() and validate_ferpa_compliance() ensure FERPA compliance"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"transcript-processing","dir":"Articles","previous_headings":"Function Categories","what":"Transcript Processing","title":"Essential Functions - Core Package Functionality","text":"load_zoom_transcript() - Load Zoom transcript files process_zoom_transcript() - Process clean transcripts consolidate_transcript() - Consolidate consecutive comments add_dead_air_rows() - Add gaps comments","code":""},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"analysis","dir":"Articles","previous_headings":"Function Categories","what":"Analysis","title":"Essential Functions - Core Package Functionality","text":"analyze_transcripts() - Main analysis function summarize_transcript_metrics() - Calculate engagement metrics analyze_multi_session_attendance() - Multi-session analysis generate_attendance_report() - Generate attendance reports","code":""},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"privacy-compliance","dir":"Articles","previous_headings":"Function Categories","what":"Privacy & Compliance","title":"Essential Functions - Core Package Functionality","text":"ensure_privacy() - Apply privacy protection set_privacy_defaults() - Configure privacy settings privacy_audit() - Audit privacy compliance validate_privacy_compliance() - Validate privacy settings validate_ferpa_compliance() - FERPA compliance check","code":""},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"name-matching","dir":"Articles","previous_headings":"Function Categories","what":"Name Matching","title":"Essential Functions - Core Package Functionality","text":"load_roster() - Load student roster safe_name_matching_workflow() - Safe name matching detect_unmatched_names() - Find unmatched names detect_duplicate_transcripts() - Find duplicate files","code":""},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"utilities","dir":"Articles","previous_headings":"Function Categories","what":"Utilities","title":"Essential Functions - Core Package Functionality","text":"plot_users() - Plot user engagement write_metrics() - Export metrics validate_schema() - Validate data structure","code":""},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"benefits-of-scope-reduction","dir":"Articles","previous_headings":"","what":"Benefits of Scope Reduction","title":"Essential Functions - Core Package Functionality","text":"Focused Functionality: essential functions exported Easier Maintenance: Smaller codebase maintain Better User Experience: Clear, focused API CRAN Ready: Minimal function surface submission Privacy First: functions prioritize data protection","code":""},{"path":"https://revgizmo.github.io/engager/articles/essential-functions.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Essential Functions - Core Package Functionality","text":"scope reduction complete, package now ready : CRAN Submission: Minimal, focused function set User Testing: Clear, essential functionality Documentation Updates: Focus core workflows UX Simplification: Streamlined user experience package now provides clean, focused API analyzing student engagement Zoom transcripts maintaining strong privacy protection FERPA compliance.","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"ferpa-compliance-ethical-use-guide","dir":"Articles","previous_headings":"","what":"FERPA Compliance & Ethical Use Guide","title":"FERPA Compliance & Ethical Use Guide","text":"vignette provides comprehensive guidance using engager package compliance Family Educational Rights Privacy Act (FERPA) ethical best practices educational data analysis.","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"ferpa-overview","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide","what":"FERPA Overview","title":"FERPA Compliance & Ethical Use Guide","text":"Family Educational Rights Privacy Act (FERPA) federal law protects privacy student education records. using package student data, must ensure compliance FERPA requirements.","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"key-ferpa-requirements","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > FERPA Overview","what":"Key FERPA Requirements","title":"FERPA Compliance & Ethical Use Guide","text":"Student Consent: Generally, written consent required disclose personally identifiable information education records Directory Information: information may disclosed without consent designated “directory information” Legitimate Educational Interest: Faculty staff may access student records legitimate educational purposes Data Security: Institutions must protect student data unauthorized access Data Retention: Institutions must establish follow data retention policies","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"privacy-first-design","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide","what":"Privacy-First Design","title":"FERPA Compliance & Ethical Use Guide","text":"package implements privacy-first defaults help ensure FERPA compliance: default, package sets privacy level \"mask\", automatically masks personally identifiable information.","code":"library(engager)  # Check current privacy level getOption(\"engager.privacy_level\")"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"privacy-levels","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide","what":"Privacy Levels","title":"FERPA Compliance & Ethical Use Guide","text":"package supports multiple privacy levels accommodate different institutional requirements:","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"ferpa-strict-ferpa_strict","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Privacy Levels","what":"1. FERPA Strict (\"ferpa_strict\")","title":"FERPA Compliance & Ethical Use Guide","text":"Maximum privacy protection institutions requiring highest level compliance: level masks: - Student names IDs - Email addresses - Phone numbers - Addresses - Social security numbers - Birth dates - Parent/guardian names - Instructor names IDs","code":"set_privacy_defaults(\"ferpa_strict\")"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"ferpa-standard-ferpa_standard","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Privacy Levels","what":"2. FERPA Standard (\"ferpa_standard\")","title":"FERPA Compliance & Ethical Use Guide","text":"Standard educational compliance institutions: level masks: - Student names IDs - Email addresses - Phone numbers - Instructor names IDs","code":"set_privacy_defaults(\"ferpa_standard\")"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"basic-mask-mask","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Privacy Levels","what":"3. Basic Mask (\"mask\")","title":"FERPA Compliance & Ethical Use Guide","text":"Default level basic privacy protection: level masks: - Student names IDs - Email addresses","code":"set_privacy_defaults(\"mask\")"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"no-masking-none","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Privacy Levels","what":"4. No Masking (\"none\")","title":"FERPA Compliance & Ethical Use Guide","text":"Disables privacy protection (recommended):","code":"set_privacy_defaults(\"none\")  # Will emit a warning"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"ferpa-compliance-functions","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide","what":"FERPA Compliance Functions","title":"FERPA Compliance & Ethical Use Guide","text":"package provides specialized functions help ensure FERPA compliance:","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"data-validation","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > FERPA Compliance Functions","what":"Data Validation","title":"FERPA Compliance & Ethical Use Guide","text":"Validate data FERPA compliance:","code":"# Sample data with PII sample_data <- tibble::tibble(   student_id = c(\"12345\", \"67890\"),   preferred_name = c(\"Alice Johnson\", \"Bob Smith\"),   email = c(\"alice@university.edu\", \"bob@university.edu\"),   participation_score = c(85, 92) )  # Validate for FERPA compliance validation_result <- validate_ferpa_compliance(sample_data) print(validation_result$compliant) print(validation_result$recommendations)"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"data-anonymization","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > FERPA Compliance Functions","what":"Data Anonymization","title":"FERPA Compliance & Ethical Use Guide","text":"Anonymize data using various methods:","code":"# Basic masking masked_data <- anonymize_educational_data(sample_data, method = \"mask\")  # Hash-based anonymization hashed_data <- anonymize_educational_data(sample_data, method = \"hash\", hash_salt = \"institution_salt\")  # Pseudonymization pseudonymized_data <- anonymize_educational_data(sample_data, method = \"pseudonymize\")  # Aggregation-based anonymization aggregated_data <- anonymize_educational_data(sample_data, method = \"aggregate\", aggregation_level = \"section\")"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"compliance-reporting","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > FERPA Compliance Functions","what":"Compliance Reporting","title":"FERPA Compliance & Ethical Use Guide","text":"Generate comprehensive FERPA compliance reports:","code":"# Generate compliance report report <- generate_ferpa_report(sample_data)  # Save report to file generate_ferpa_report(   sample_data,    output_file = \"ferpa_compliance_report.json\",   report_format = \"json\" )"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"data-retention","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > FERPA Compliance Functions","what":"Data Retention","title":"FERPA Compliance & Ethical Use Guide","text":"Check data retention policies:","code":"# Add date column for retention checking sample_data_with_dates <- sample_data %>%   dplyr::mutate(session_date = as.Date(c(\"2024-01-15\", \"2024-02-20\")))  # Check retention policy retention_check <- check_data_retention_policy(   sample_data_with_dates,   retention_period = \"academic_year\",   date_column = \"session_date\" )  print(retention_check$compliant) print(retention_check$recommendations)"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"educational-institutions","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Institutional Compliance Guidelines","what":"Educational Institutions","title":"FERPA Compliance & Ethical Use Guide","text":"traditional educational institutions:","code":"# Validate with educational institution settings edu_validation <- validate_ferpa_compliance(   sample_data,   institution_type = \"educational\" )  print(edu_validation$institution_guidance)"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"research-institutions","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Institutional Compliance Guidelines","what":"Research Institutions","title":"FERPA Compliance & Ethical Use Guide","text":"research-focused institutions:","code":"# Validate with research institution settings research_validation <- validate_ferpa_compliance(   sample_data,   institution_type = \"research\" )  print(research_validation$institution_guidance)"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"mixed-institutions","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Institutional Compliance Guidelines","what":"Mixed Institutions","title":"FERPA Compliance & Ethical Use Guide","text":"institutions educational research functions:","code":"# Validate with mixed institution settings mixed_validation <- validate_ferpa_compliance(   sample_data,   institution_type = \"mixed\" )  print(mixed_validation$institution_guidance)"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"data-classification","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Data Handling Best Practices","what":"1. Data Classification","title":"FERPA Compliance & Ethical Use Guide","text":"Classify data appropriately: Public Data: Aggregated statistics, anonymized results Internal Data: Student records legitimate educational purposes Confidential Data: Personally identifiable information requiring special protection","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"access-controls","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Data Handling Best Practices","what":"2. Access Controls","title":"FERPA Compliance & Ethical Use Guide","text":"Implement appropriate access controls: Limit access authorized personnel Use role-based access controls Document data access usage Implement secure authentication","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"data-storage","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Data Handling Best Practices","what":"3. Data Storage","title":"FERPA Compliance & Ethical Use Guide","text":"Ensure secure data storage: Use encrypted storage sensitive data Implement secure backup procedures Use secure transmission protocols Regularly audit data access","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"data-disposal","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Data Handling Best Practices","what":"4. Data Disposal","title":"FERPA Compliance & Ethical Use Guide","text":"Follow proper data disposal procedures: Implement automated data disposal Document disposal procedures Verify complete data removal Maintain disposal audit trails","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"before-analysis","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Instructor Guidelines","what":"Before Analysis","title":"FERPA Compliance & Ethical Use Guide","text":"Review Institutional Policies: Understand institution’s FERPA policies Obtain Necessary Permissions: Ensure authorization access student data Plan Data Handling: Determine protect dispose data Document Procedures: Create clear procedures data handling","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"during-analysis","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Instructor Guidelines","what":"During Analysis","title":"FERPA Compliance & Ethical Use Guide","text":"Use Privacy Defaults: Always use privacy-safe settings Validate Data: Use compliance functions check data Limit Access: Restrict access necessary personnel Monitor Usage: Track data used","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"after-analysis","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Instructor Guidelines","what":"After Analysis","title":"FERPA Compliance & Ethical Use Guide","text":"Anonymize Results: Ensure outputs privacy-safe Secure Storage: Store results securely Dispose Data: Follow institutional disposal procedures Document Process: Maintain records analysis","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"institutional-compliance-checklist","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide","what":"Institutional Compliance Checklist","title":"FERPA Compliance & Ethical Use Guide","text":"Use checklist ensure FERPA compliance:","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"pre-analysis","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Institutional Compliance Checklist","what":"Pre-Analysis","title":"FERPA Compliance & Ethical Use Guide","text":"Review institutional FERPA policies Obtain necessary permissions Set secure data environment Configure privacy defaults","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"during-analysis-1","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Institutional Compliance Checklist","what":"During Analysis","title":"FERPA Compliance & Ethical Use Guide","text":"Use privacy-safe functions Validate data compliance Limit data access Monitor data usage","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"post-analysis","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Institutional Compliance Checklist","what":"Post-Analysis","title":"FERPA Compliance & Ethical Use Guide","text":"Anonymize outputs Secure result storage Dispose raw data Document procedures","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"ongoing","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Institutional Compliance Checklist","what":"Ongoing","title":"FERPA Compliance & Ethical Use Guide","text":"Regular compliance audits Staff training updates Policy reviews Security assessments","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"privacy-level-not-working","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Troubleshooting Common Issues","what":"Privacy Level Not Working","title":"FERPA Compliance & Ethical Use Guide","text":"privacy masking isn’t working expected:","code":"# Check current privacy level getOption(\"engager.privacy_level\")  # Reset to default set_privacy_defaults(\"mask\")  # Verify with sample data test_data <- tibble::tibble(name = \"Test Student\") ensure_privacy(test_data)"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"compliance-validation-failing","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Troubleshooting Common Issues","what":"Compliance Validation Failing","title":"FERPA Compliance & Ethical Use Guide","text":"compliance validation failing:","code":"# Check what PII was detected validation_result <- validate_ferpa_compliance(your_data) print(validation_result$pii_detected)  # Anonymize the data anonymized_data <- anonymize_educational_data(your_data, method = \"mask\")  # Re-validate validate_ferpa_compliance(anonymized_data)"},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"data-retention-issues","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Troubleshooting Common Issues","what":"Data Retention Issues","title":"FERPA Compliance & Ethical Use Guide","text":"data retention checks flagging issues:","code":"# Check retention policy retention_check <- check_data_retention_policy(   your_data,   retention_period = \"academic_year\",   date_column = \"your_date_column\" )  # Review recommendations print(retention_check$recommendations)"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"educational-purpose","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Ethical Use Principles","what":"1. Educational Purpose","title":"FERPA Compliance & Ethical Use Guide","text":"Use package support educational outcomes: Focus participation equity Identify students need support Improve teaching effectiveness Support student success","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"avoid-surveillance","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Ethical Use Principles","what":"2. Avoid Surveillance","title":"FERPA Compliance & Ethical Use Guide","text":"use package surveillance: Avoid tracking individual students without educational purpose Don’t use data punitive measures Focus positive interventions Respect student privacy","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"transparency","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Ethical Use Principles","what":"3. Transparency","title":"FERPA Compliance & Ethical Use Guide","text":"transparent data use: Inform students data collection Explain data used Provide opt-options possible Document data usage","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"beneficence","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Ethical Use Principles","what":"4. Beneficence","title":"FERPA Compliance & Ethical Use Guide","text":"Ensure data use benefits students: Use insights improve teaching Provide targeted support Identify systemic issues Promote equitable participation","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"ferpa-resources","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Resources","what":"FERPA Resources","title":"FERPA Compliance & Ethical Use Guide","text":"FERPA Regulations FERPA Guidance Educational Institutions FERPA Research","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"institutional-resources","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Resources","what":"Institutional Resources","title":"FERPA Compliance & Ethical Use Guide","text":"Contact institution’s FERPA compliance officer Review institutional data handling policies Consult institutional review board (IRB) Attend FERPA training sessions","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"package-resources","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide > Resources","what":"Package Resources","title":"FERPA Compliance & Ethical Use Guide","text":"Package documentation: ?engager Privacy functions: ?ensure_privacy, ?set_privacy_defaults FERPA functions: ?validate_ferpa_compliance, ?anonymize_educational_data Report generation: ?generate_ferpa_report","code":""},{"path":"https://revgizmo.github.io/engager/articles/ferpa-ethics.html","id":"conclusion","dir":"Articles","previous_headings":"FERPA Compliance & Ethical Use Guide","what":"Conclusion","title":"FERPA Compliance & Ethical Use Guide","text":"FERPA compliance essential working student data. package provides tools help ensure compliance, ultimate responsibility lies user institution. Always review institutional policies consult compliance officers doubt. Remember: Privacy design, ethical default.","code":""},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"getting-started-with-engager","dir":"Articles","previous_headings":"","what":"Getting Started with engager","title":"Getting Started with engager","text":"engager package helps instructors analyze student engagement Zoom transcripts, particular focus participation equity. vignette get started basic workflow.","code":""},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"Getting Started with engager","what":"Installation","title":"Getting Started with engager","text":"Install package GitHub:","code":"devtools::install_github(\"revgizmo/engager\")"},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"quick-start","dir":"Articles","previous_headings":"Getting Started with engager","what":"Quick Start","title":"Getting Started with engager","text":"’s minimal example get started:","code":"# Load a sample transcript transcript_file <- system.file(   \"extdata/transcripts/GMT20240124-202901_Recording.transcript.vtt\",   package = \"engager\" )  # Process the transcript processed_transcript <- process_zoom_transcript(   transcript_file_path = transcript_file,   consolidate_comments = TRUE,   add_dead_air = TRUE )  # Calculate summary metrics summary_metrics <- summarize_transcript_metrics(   transcript_file_path = transcript_file,   names_exclude = c(\"dead_air\") )  # View the results (privacy-safe by default) head(summary_metrics) #> # A tibble: 6 × 13 #>   transcript_file   name      n duration wordcount comments perc_n perc_duration #>   <chr>             <chr> <int>    <dbl>     <dbl> <I<list>  <dbl>         <dbl> #> 1 GMT20240124-2029… Stud…     8     69.1       213 <chr>     17.8          27.5  #> 2 GMT20240124-2029… Stud…    10     44.9       135 <chr>     22.2          17.9  #> 3 GMT20240124-2029… Stud…     7     33.4       447 <chr>     15.6          13.3  #> 4 GMT20240124-2029… Stud…     5     22.4       126 <chr>     11.1           8.91 #> 5 GMT20240124-2029… Stud…     2     14.3       252 <chr>      4.44          5.70 #> 6 GMT20240124-2029… Stud…     3     14.1       260 <chr>      6.67          5.60 #> # ℹ 5 more variables: perc_wordcount <dbl>, n_perc <dbl>, duration_perc <dbl>, #> #   wordcount_perc <dbl>, wpm <dbl>  # Check privacy compliance privacy_result <- privacy_audit(summary_metrics) cat(\"Privacy Check:\", ifelse(nrow(privacy_result) == 0, \"✅ No issues found\", \"⚠️  Issues found\"), \"\\n\") #> Privacy Check: ⚠️  Issues found"},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"what-the-package-does","dir":"Articles","previous_headings":"Getting Started with engager","what":"What the Package Does","title":"Getting Started with engager","text":"engager package provides tools : Loading Processing Zoom Transcripts: Convert Zoom VTT files analyzable data Calculating Engagement Metrics: Measure participation speaker/student Name Matching Cleaning: Match transcript names student rosters Visualization: Create plots analyze participation patterns Reporting: Generate individual student reports FERPA Compliance: Validate ensure compliance educational privacy laws Data Anonymization: Protect student privacy preserving data utility","code":""},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"basic-workflow","dir":"Articles","previous_headings":"Getting Started with engager","what":"Basic Workflow","title":"Getting Started with engager","text":"typical workflow involves: Setup: Configure analysis parameters privacy settings Load Transcripts: Import process Zoom transcript files Load Roster: Import student enrollment data Clean Names: Match transcript names student records Analyze: Calculate metrics create visualizations Validate: Check FERPA compliance anonymize data Report: Generate insights reports","code":""},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"troubleshooting-name-matching-issues","dir":"Articles","previous_headings":"Getting Started with engager","what":"Troubleshooting Name Matching Issues","title":"Getting Started with engager","text":"working Zoom transcripts student rosters, may encounter name matching issues. package uses privacy-first approach stops processing names safely matched.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"issue-found-unmatched-names-error","dir":"Articles","previous_headings":"Getting Started with engager > Troubleshooting Name Matching Issues > Common Issues and Solutions","what":"Issue: “Found unmatched names” Error","title":"Getting Started with engager","text":"error occurs names Zoom transcript don’t match names student roster. Solution: Create section_names_lookup.csv file map transcript names roster names.","code":"# Example: Create name mappings name_mappings <- data.frame(   transcript_name = c(\"JS\", \"Dr. Smith\", \"Guest User\"),   preferred_name = c(\"John Smith\", \"John Smith\", \"GUEST_001\"),   stringsAsFactors = FALSE )  # Write the mapping file readr::write_csv(name_mappings, \"section_names_lookup.csv\")"},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"issue-guest-users-in-transcripts","dir":"Articles","previous_headings":"Getting Started with engager > Troubleshooting Name Matching Issues > Common Issues and Solutions","what":"Issue: Guest Users in Transcripts","title":"Getting Started with engager","text":"Zoom often shows “Guest User” “Unknown User” participants signed . Solution: Map guest users standardized identifiers.","code":"# Map guest users to consistent identifiers guest_mappings <- data.frame(   transcript_name = c(\"Guest User\", \"Unknown User\", \"Guest-1234\"),   preferred_name = c(\"GUEST_001\", \"GUEST_002\", \"GUEST_003\"),   stringsAsFactors = FALSE )"},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"issue-custom-names-and-abbreviations","dir":"Articles","previous_headings":"Getting Started with engager > Troubleshooting Name Matching Issues > Common Issues and Solutions","what":"Issue: Custom Names and Abbreviations","title":"Getting Started with engager","text":"Students may use nicknames abbreviations Zoom. Solution: Create mappings name variations.","code":"# Map custom names to official roster names custom_mappings <- data.frame(   transcript_name = c(\"JS\", \"JohnS\", \"jsmith\"),   preferred_name = c(\"John Smith\", \"John Smith\", \"John Smith\"),   stringsAsFactors = FALSE )"},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"getting-help","dir":"Articles","previous_headings":"Getting Started with engager > Troubleshooting Name Matching Issues","what":"Getting Help","title":"Getting Started with engager","text":"detailed troubleshooting guidance: - See troubleshooting vignette: vignette(\"name-matching-troubleshooting\") - Check package documentation: ?safe_name_matching_workflow - Review example files: See inst/extdata/example_section_names_lookup.csv","code":""},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"next-steps","dir":"Articles","previous_headings":"Getting Started with engager","what":"Next Steps","title":"Getting Started with engager","text":"transcript processing: See Transcript Processing vignette roster management: See Roster Cleaning vignette visualization: See Plotting Analysis vignette advanced workflows: See Session Mapping vignette name matching help: See Name Matching Troubleshooting vignette FERPA compliance: See FERPA Compliance & Ethical Use vignette","code":""},{"path":"https://revgizmo.github.io/engager/articles/getting-started.html","id":"getting-help-1","dir":"Articles","previous_headings":"Getting Started with engager","what":"Getting Help","title":"Getting Started with engager","text":"Check package documentation Review PROJECT.md current development status Report issues GitHub","code":""},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"plotting-and-analysis","dir":"Articles","previous_headings":"","what":"Plotting and Analysis","title":"Plotting and Analysis with engager","text":"vignette shows create visualizations analyze student engagement patterns using engager package.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"loading-sample-data","dir":"Articles","previous_headings":"Plotting and Analysis > Preparing Data for Analysis","what":"Loading Sample Data","title":"Plotting and Analysis with engager","text":"First, let’s prepare sample data analysis:","code":"# Create sample data for demonstration # In practice, you would load actual transcript and roster data  # Sample transcript metrics transcripts_metrics_df <- tibble::tibble(   name = c(\"Alice Johnson\", \"Bob Smith\", \"Carol Davis\", \"David Wilson\", \"Eva Brown\"),   n = c(8, 12, 5, 15, 3),   duration = c(45.2, 67.8, 23.1, 89.4, 12.5),   wordcount = c(1200, 1800, 650, 2200, 400),   comments = list(\"Good point\", \"Interesting question\", \"I agree\", \"Follow-up question\", \"Brief comment\"),   n_perc = c(18.6, 27.9, 11.6, 34.9, 7.0),   duration_perc = c(19.2, 28.8, 9.8, 38.0, 5.3),   wordcount_perc = c(19.2, 28.8, 10.4, 35.2, 6.4),   wpm = c(26.5, 26.6, 28.1, 24.6, 32.0),   course_section = \"LTF.201.1\",   course = 201,   section = 1,   day = \"Thursday\",   time = \"18:30\",   name_raw = name,   start_time_local = as.POSIXct(\"2024-01-24 18:30:00\", tz = \"America/Los_Angeles\"),   dept = \"LTF\",   session_num = 1 )  # Sample roster sessions roster_sessions <- tibble::tibble(   student_id = c(\"12345\", \"12346\", \"12347\", \"12348\", \"12349\"),   first_last = c(\"Alice Johnson\", \"Bob Smith\", \"Carol Davis\", \"David Wilson\", \"Eva Brown\"),   preferred_name = c(\"Alice\", \"Bob\", \"Carol\", \"David\", \"Eva\"),   dept = \"LTF\",   course = 201,   section = 1,   session_num = 1,   start_time_local = as.POSIXct(\"2024-01-24 18:30:00\", tz = \"America/Los_Angeles\"),   course_section = \"LTF.201.1\" )  # For this example, we'll work directly with the sample data # In practice, you would use the essential functions to process real data  # Create a simplified summary dataframe for demonstration transcripts_summary_df <- transcripts_metrics_df %>%   group_by(name) %>%   summarise(     session_ct = n(),     n = sum(n),     duration = sum(duration),     wordcount = sum(wordcount),     n_perc = mean(n_perc),     duration_perc = mean(duration_perc),     wordcount_perc = mean(wordcount_perc),     wpm = mean(wpm),     section = first(section),     course = first(course)   )  # View the summary data head(transcripts_summary_df) #> # A tibble: 5 × 11 #>   name   session_ct     n duration wordcount n_perc duration_perc wordcount_perc #>   <chr>       <int> <dbl>    <dbl>     <dbl>  <dbl>         <dbl>          <dbl> #> 1 Alice…          1     8     45.2      1200   18.6          19.2           19.2 #> 2 Bob S…          1    12     67.8      1800   27.9          28.8           28.8 #> 3 Carol…          1     5     23.1       650   11.6           9.8           10.4 #> 4 David…          1    15     89.4      2200   34.9          38             35.2 #> 5 Eva B…          1     3     12.5       400    7             5.3            6.4 #> # ℹ 3 more variables: wpm <dbl>, section <dbl>, course <dbl>"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"plotting-by-metric","dir":"Articles","previous_headings":"Plotting and Analysis > Basic Visualization","what":"Plotting by Metric","title":"Plotting and Analysis with engager","text":"Use unified plot_users() function create visualizations different engagement metrics. default output bar chart minimal theme improved readability:","code":"# Plot session count plot_users(transcripts_summary_df, metric = \"session_ct\", facet_by = \"section\", mask_by = \"name\") # Plot comment count plot_users(transcripts_summary_df, metric = \"n\", facet_by = \"section\", mask_by = \"name\") # Plot speaking duration plot_users(transcripts_summary_df, metric = \"duration\", facet_by = \"section\", mask_by = \"name\") # Plot word count plot_users(transcripts_summary_df, metric = \"wordcount\", facet_by = \"section\", mask_by = \"name\")"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"available-metrics","dir":"Articles","previous_headings":"Plotting and Analysis > Understanding the Metrics","what":"Available Metrics","title":"Plotting and Analysis with engager","text":"package provides several engagement metrics: session_ct: Number sessions attended n: Number comments made n_perc: Percentage total comments duration: Total speaking time (seconds) duration_perc: Percentage total speaking time wordcount: Total words spoken wordcount_perc: Percentage total words wpm: Words per minute","code":""},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"percentage-metrics","dir":"Articles","previous_headings":"Plotting and Analysis > Understanding the Metrics","what":"Percentage Metrics","title":"Plotting and Analysis with engager","text":"Visualize relative participation:","code":"# Plot percentage of comments plot_users(transcripts_summary_df, metric = \"n_perc\", facet_by = \"section\", mask_by = \"name\") # Plot percentage of speaking time plot_users(transcripts_summary_df, metric = \"duration_perc\", facet_by = \"section\", mask_by = \"name\") # Plot percentage of words plot_users(transcripts_summary_df, metric = \"wordcount_perc\", facet_by = \"section\", mask_by = \"name\")"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"filtering-for-enrolled-students","dir":"Articles","previous_headings":"Plotting and Analysis > Students-Only Analysis","what":"Filtering for Enrolled Students","title":"Plotting and Analysis with engager","text":"Focus analysis enrolled students :","code":"# Filter for students only (exclude instructors, TAs, etc.) # In practice, you would use roster data to identify students students_only_summary <- transcripts_summary_df %>%   filter(!grepl(\"Instructor|TA|Professor\", name, ignore.case = TRUE))  # Plot students-only metrics plot_users(students_only_summary, metric = \"session_ct\", facet_by = \"section\", mask_by = \"name\")"},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"masked-names-for-privacy","dir":"Articles","previous_headings":"Plotting and Analysis > Students-Only Analysis","what":"Masked Names for Privacy","title":"Plotting and Analysis with engager","text":"Use rank-based masked labels privacy-conscious analysis:","code":"# Plot with rank-masked names plot_users(   data = students_only_summary,   metric = \"n\",   facet_by = \"section\",   mask_by = \"rank\" ) plot_users(   data = students_only_summary,   metric = \"duration\",   facet_by = \"section\",   mask_by = \"rank\" )"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"custom-filtering","dir":"Articles","previous_headings":"Plotting and Analysis > Advanced Analysis","what":"Custom Filtering","title":"Plotting and Analysis with engager","text":"Filter data specific analysis:","code":"# Filter for specific sections section_data <- transcripts_summary_df %>%   filter(section == 1) # Use the actual section number from our sample data  # Plot filtered data plot_users(section_data, metric = \"wpm\", facet_by = \"section\", mask_by = \"name\")"},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"comparative-analysis","dir":"Articles","previous_headings":"Plotting and Analysis > Advanced Analysis","what":"Comparative Analysis","title":"Plotting and Analysis with engager","text":"Compare different metrics:","code":"# Create comparison plots using grid layout library(gridExtra) #>  #> Attaching package: 'gridExtra' #> The following object is masked from 'package:dplyr': #>  #>     combine  # Create individual plots p1 <- plot_users(transcripts_summary_df, metric = \"n\", facet_by = \"section\", mask_by = \"name\") p2 <- plot_users(transcripts_summary_df, metric = \"duration\", facet_by = \"section\", mask_by = \"name\") p3 <- plot_users(transcripts_summary_df, metric = \"wordcount\", facet_by = \"section\", mask_by = \"name\") p4 <- plot_users(transcripts_summary_df, metric = \"wpm\", facet_by = \"section\", mask_by = \"name\")  # Arrange plots in a grid grid.arrange(p1, p2, p3, p4, ncol = 2)"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"participation-equity","dir":"Articles","previous_headings":"Plotting and Analysis > Interpreting the Results","what":"Participation Equity","title":"Plotting and Analysis with engager","text":"Look patterns participation:","code":"# Analyze participation distribution participation_summary <- transcripts_summary_df %>%   group_by(section) %>%   summarise(     total_students = n(),     active_students = sum(n > 0),     avg_comments = mean(n),     median_comments = median(n),     participation_rate = active_students / total_students   )  participation_summary #> # A tibble: 1 × 6 #>   section total_students active_students avg_comments median_comments #>     <dbl>          <int>           <int>        <dbl>           <dbl> #> 1       1              5               5          8.6               8 #> # ℹ 1 more variable: participation_rate <dbl>"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"creating-your-own-plots","dir":"Articles","previous_headings":"Plotting and Analysis > Custom Visualizations","what":"Creating Your Own Plots","title":"Plotting and Analysis with engager","text":"Use data create custom visualizations:","code":"# Custom participation distribution ggplot(transcripts_summary_df, aes(x = n)) +   geom_histogram(binwidth = 1, fill = \"steelblue\", alpha = 0.7) +   labs(     title = \"Distribution of Comment Counts\",     x = \"Number of Comments\",     y = \"Number of Students\"   ) +   theme_minimal() # Custom duration vs word count ggplot(transcripts_summary_df, aes(x = duration, y = wordcount)) +   geom_point(alpha = 0.6) +   geom_smooth(method = \"lm\", se = FALSE) +   labs(     title = \"Speaking Duration vs Word Count\",     x = \"Duration (seconds)\",     y = \"Word Count\"   ) +   theme_minimal() #> `geom_smooth()` using formula = 'y ~ x'"},{"path":[]},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"choosing-the-right-metric","dir":"Articles","previous_headings":"Plotting and Analysis > Best Practices","what":"Choosing the Right Metric","title":"Plotting and Analysis with engager","text":"attendance: Use session_ct participation frequency: Use n n_perc speaking time: Use duration duration_perc content contribution: Use wordcount wordcount_perc speaking pace: Use wpm","code":""},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"privacy-considerations","dir":"Articles","previous_headings":"Plotting and Analysis > Best Practices","what":"Privacy Considerations","title":"Plotting and Analysis with engager","text":"Use masked names sharing results Consider aggregating data small groups mindful FERPA compliance requirements","code":""},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"visualization-tips","dir":"Articles","previous_headings":"Plotting and Analysis > Best Practices","what":"Visualization Tips","title":"Plotting and Analysis with engager","text":"Use consistent color schemes Include clear titles labels Consider log scales skewed distributions Add context (e.g., class averages, benchmarks)","code":""},{"path":"https://revgizmo.github.io/engager/articles/plotting.html","id":"next-steps","dir":"Articles","previous_headings":"Plotting and Analysis","what":"Next Steps","title":"Plotting and Analysis with engager","text":"session mapping: See Session Mapping vignette student reports: See Student Reports vignette troubleshooting: See Troubleshooting Guide vignette","code":""},{"path":"https://revgizmo.github.io/engager/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Conor Healy. Author, maintainer.","code":""},{"path":"https://revgizmo.github.io/engager/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Healy C (2025). engager: Engager: Analyze Student Engagement Zoom Transcripts. R package version 0.1.0, https://github.com/revgizmo/engager.","code":"@Manual{,   title = {engager: Engager: Analyze Student Engagement from Zoom Transcripts},   author = {Conor Healy},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/revgizmo/engager}, }"},{"path":"https://revgizmo.github.io/engager/index.html","id":"engager","dir":"","previous_headings":"","what":"Engager: Analyze Student Engagement from Zoom Transcripts","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"Note: Renamed zoomstudentengagement engager (API changes). goal engager allow instructors gain insights student engagement, particular focus participation equity, Zoom transcripts recorded course sessions.","code":""},{"path":"https://revgizmo.github.io/engager/index.html","id":"id_-documentation","dir":"","previous_headings":"","what":"📚 Documentation","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"docs/README.md - Complete documentation index docs/features/feature-index.md - Comprehensive feature documentation CONTRIBUTING.md - contribute docs/development/ISSUE_MANAGEMENT_QUICK_REFERENCE.md - Quick guide issue management","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/index.html","id":"installation","dir":"","previous_headings":"🚀 Quick Start","what":"Installation","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"","code":"devtools::install_github(\"revgizmo/engager\")"},{"path":"https://revgizmo.github.io/engager/index.html","id":"id_5-minute-whole-game-example","dir":"","previous_headings":"🚀 Quick Start","what":"5-minute whole-game example","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"","code":"library(engager)  # 1) Compute metrics for a single transcript transcript_file <- system.file(   \"extdata/transcripts/GMT20240124-202901_Recording.transcript.vtt\",   package = \"engager\" ) metrics <- summarize_transcript_metrics(transcript_file_path = transcript_file)  # 2) Plot one metric with privacy-first defaults #    (outputs a bar chart with a minimal theme) plot <- plot_users(metrics, metric = \"session_ct\", facet_by = \"none\", mask_by = \"name\") print(plot)  # 3) Write masked metrics to CSV invisible(write_metrics(metrics, what = \"engagement\", path = \"engagement_metrics.csv\"))"},{"path":"https://revgizmo.github.io/engager/index.html","id":"basic-example","dir":"","previous_headings":"🚀 Quick Start","what":"Basic Example","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"","code":"library(engager)  # Load and process a transcript transcript_file <- system.file(   \"extdata/transcripts/GMT20240124-202901_Recording.transcript.vtt\",   package = \"engager\" )  # Calculate engagement metrics metrics <- summarize_transcript_metrics(   transcript_file_path = transcript_file,   names_exclude = c(\"dead_air\") )  # View results head(metrics)"},{"path":"https://revgizmo.github.io/engager/index.html","id":"id_-vignettes","dir":"","previous_headings":"","what":"📖 Vignettes","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"detailed workflows examples, see package vignettes: Getting Started - Basic setup workflow overview Whole Game - Complete workflow new instructors Transcript Processing - Load, process, analyze transcripts Roster Management - Manage student rosters clean name mismatches Plotting Analysis - Create visualizations analyze engagement patterns Session Mapping - Handle complex scenarios multiple courses/sections","code":""},{"path":"https://revgizmo.github.io/engager/index.html","id":"id_-what-the-package-does","dir":"","previous_headings":"","what":"🎯 What the Package Does","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"engager package provides tools : Loading Processing Zoom Transcripts: Convert Zoom .transcript.vtt files analyzable data Calculating Engagement Metrics: Measure participation speaker/student Name Matching Cleaning: Match transcript names student rosters Visualization: Create plots analyze participation patterns Reporting: Generate individual student reports Note: package specifically processes .transcript.vtt files (canonical Zoom transcript files). Zoom file types like .cc.vtt (closed captions) .newChat.txt (chat logs) currently supported may added future versions.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/index.html","id":"core-processing","dir":"","previous_headings":"🔧 Key Functions","what":"Core Processing","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"load_zoom_transcript() - Load raw Zoom transcript files (.transcript.vtt) process_zoom_transcript() - Process consolidate transcript data summarize_transcript_metrics() - Calculate engagement metrics summarize_transcript_files() - Batch process multiple transcripts","code":""},{"path":"https://revgizmo.github.io/engager/index.html","id":"data-management","dir":"","previous_headings":"🔧 Key Functions","what":"Data Management","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"load_roster() - Load student enrollment data make_clean_names_df() - Match transcript names student records create_session_mapping() - Map recordings courses (advanced)","code":""},{"path":"https://revgizmo.github.io/engager/index.html","id":"analysis-and-visualization","dir":"","previous_headings":"🔧 Key Functions","what":"Analysis and Visualization","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"plot_users() - Unified plotting privacy-aware options plot_users_by_metric() - Legacy plotting API (still available) plot_users_masked_section_by_metric() - Legacy plotting API (still available) make_transcripts_summary_df() - Generate summary statistics","code":""},{"path":"https://revgizmo.github.io/engager/index.html","id":"reporting","dir":"","previous_headings":"🔧 Key Functions","what":"Reporting","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"run_student_reports() - Render per-student summary reports","code":""},{"path":"https://revgizmo.github.io/engager/index.html","id":"diagnostics-and-interactive-prompts","dir":"","previous_headings":"🔧 Key Functions","what":"Diagnostics and interactive prompts","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"functions quiet default keep examples/tests clean. can enable optional diagnostics: Interactive prompts (e.g., create_session_mapping() assigning unmatched recordings) shown interactive sessions. non-interactive runs (e.g., CI), prompts suppressed quiet fallback used. See also: CONTRIBUTING.md Diagnostic Output Policy.","code":"# Enable package-wide diagnostics options(engager.verbose = TRUE)  # Or enable per-call diagnostics where supported load_zoom_recorded_sessions_list(   data_folder = \".\",   transcripts_folder = \"transcripts\",   verbose = TRUE )  # Turn diagnostics back off options(engager.verbose = FALSE)"},{"path":"https://revgizmo.github.io/engager/index.html","id":"id_-typical-workflow","dir":"","previous_headings":"","what":"📊 Typical Workflow","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"Setup: Configure analysis parameters Load Transcripts: Import process Zoom transcript files Load Roster: Import student enrollment data Clean Names: Match transcript names student records Analyze: Calculate metrics create visualizations Report: Generate insights reports","code":""},{"path":"https://revgizmo.github.io/engager/index.html","id":"id_-privacy-defaults","dir":"","previous_headings":"","what":"🔒 Privacy Defaults","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"package privacy-first default. load, sets global option engager.privacy_level \"mask\" (unless set ). means identifiers like names student IDs masked labels Student 01 summaries, plots, writers. change behavior temporarily (recommended student data): Masked default: preferred_name, name, first_last, name_raw, student_id, email. See vignette “Ethical & FERPA Guide” details.","code":"library(engager) set_privacy_defaults(\"none\")  # will emit a warning # ... analysis that may include identifiable outputs ... set_privacy_defaults(\"mask\")  # restore safe default"},{"path":[]},{"path":"https://revgizmo.github.io/engager/index.html","id":"pull-request-review","dir":"","previous_headings":"Development","what":"Pull Request Review","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"project uses lightweight PR review process focused CRAN submission readiness privacy compliance. See CONTRIBUTING.md review checklist criteria.","code":""},{"path":"https://revgizmo.github.io/engager/index.html","id":"id_-contributing","dir":"","previous_headings":"","what":"🤝 Contributing","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"welcome contributions! Please see CONTRIBUTING.md details.","code":""},{"path":"https://revgizmo.github.io/engager/index.html","id":"id_-license","dir":"","previous_headings":"","what":"📄 License","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"package licensed MIT License. See CRAN stub LICENSE full text LICENSE.md.","code":""},{"path":"https://revgizmo.github.io/engager/index.html","id":"id_-links","dir":"","previous_headings":"","what":"🔗 Links","title":"Engager: Analyze Student Engagement from Zoom Transcripts","text":"GitHub Repository: https://github.com/revgizmo/engager Issues: https://github.com/revgizmo/engager/issues Project Status: docs/development/PROJECT.md","code":""},{"path":"https://revgizmo.github.io/engager/reference/abort_zse.html","id":null,"dir":"Reference","previous_headings":"","what":"Error handling helpers — abort_zse","title":"Error handling helpers — abort_zse","text":"Provides small wrapper around rlang::abort() standardize error classes within package precise testing user handling.","code":""},{"path":"https://revgizmo.github.io/engager/reference/abort_zse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error handling helpers — abort_zse","text":"","code":"abort_zse(message, class = character())"},{"path":"https://revgizmo.github.io/engager/reference/abort_zse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error handling helpers — abort_zse","text":"message Error message display class Additional error class add error","code":""},{"path":"https://revgizmo.github.io/engager/reference/abort_zse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error handling helpers — abort_zse","text":"return value, throws error","code":""},{"path":"https://revgizmo.github.io/engager/reference/add_dead_air_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Dead Air Rows — add_dead_air_rows","title":"Add Dead Air Rows — add_dead_air_rows","text":"Take tibble containing comments Zoom recording transcript return tibble adds rows time transcribed comments, labeled dead_air_name provided (default value 'dead_air'). resulting tibble rows accounting time beginning first comment end last one.","code":""},{"path":"https://revgizmo.github.io/engager/reference/add_dead_air_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Dead Air Rows — add_dead_air_rows","text":"","code":"add_dead_air_rows(df = NULL, dead_air_name = \"dead_air\")"},{"path":"https://revgizmo.github.io/engager/reference/add_dead_air_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Dead Air Rows — add_dead_air_rows","text":"df tibble containing transcript comments columns: name, start, end, comment dead_air_name Name use dead air periods. Defaults 'dead_air'.","code":""},{"path":"https://revgizmo.github.io/engager/reference/add_dead_air_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Dead Air Rows — add_dead_air_rows","text":"tibble rows added dead air periods","code":""},{"path":"https://revgizmo.github.io/engager/reference/analyze_multi_session_attendance.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Multi-Session Attendance Patterns — analyze_multi_session_attendance","title":"Analyze Multi-Session Attendance Patterns — analyze_multi_session_attendance","text":"Analyzes attendance patterns across multiple Zoom sessions, tracking attended sessions identifying participation patterns maintaining privacy compliance.","code":""},{"path":"https://revgizmo.github.io/engager/reference/analyze_multi_session_attendance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Multi-Session Attendance Patterns — analyze_multi_session_attendance","text":"","code":"analyze_multi_session_attendance(   transcript_files = NULL,   roster_data = NULL,   data_folder = \".\",   transcripts_folder = \"transcripts\",   unmatched_names_action = c(\"stop\", \"warn\"),   privacy_level = c(\"ferpa_strict\", \"ferpa_standard\", \"mask\", \"none\"),   min_attendance_threshold = 0.5 )"},{"path":"https://revgizmo.github.io/engager/reference/analyze_multi_session_attendance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Multi-Session Attendance Patterns — analyze_multi_session_attendance","text":"transcript_files Vector transcript file paths analyze roster_data Data frame containing student roster information data_folder Base folder containing data files transcripts_folder Subfolder containing transcript files unmatched_names_action Action take unmatched names: \"stop\" \"warn\" privacy_level Privacy level: \"ferpa_strict\", \"ferpa_standard\", \"mask\", \"none\" min_attendance_threshold Minimum attendance threshold \"consistent attendee\" (default: 0.5)","code":""},{"path":"https://revgizmo.github.io/engager/reference/analyze_multi_session_attendance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Multi-Session Attendance Patterns — analyze_multi_session_attendance","text":"List containing: attendance_matrix: Data frame participants rows sessions columns attendance_summary: Summary statistics participant session_summary: Summary statistics session participation_patterns: Analysis participation patterns privacy_compliant: Boolean indicating outputs maintain privacy","code":""},{"path":"https://revgizmo.github.io/engager/reference/analyze_multi_session_attendance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Multi-Session Attendance Patterns — analyze_multi_session_attendance","text":"","code":"# Analyze attendance across multiple sessions # transcript_files <- c(\"session1.vtt\", \"session2.vtt\", \"session3.vtt\") # roster_data <- load_roster(data_folder = \"data/metadata\", roster_file = \"roster.csv\") # results <- analyze_multi_session_attendance( #   transcript_files = transcript_files, #   roster_data = roster_data, #   data_folder = \"data\", #   unmatched_names_action = \"warn\" # ) # print(results$attendance_summary)"},{"path":"https://revgizmo.github.io/engager/reference/analyze_transcripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Transcripts (High-level orchestration) — analyze_transcripts","title":"Analyze Transcripts (High-level orchestration) — analyze_transcripts","text":"Convenience wrapper process set .transcript.vtt files folder, compute engagement metrics, optionally write outputs.","code":""},{"path":"https://revgizmo.github.io/engager/reference/analyze_transcripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Transcripts (High-level orchestration) — analyze_transcripts","text":"","code":"analyze_transcripts(   transcripts_folder = NULL,   names_to_exclude = c(\"dead_air\"),   write = FALSE,   output_path = NULL )"},{"path":"https://revgizmo.github.io/engager/reference/analyze_transcripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Transcripts (High-level orchestration) — analyze_transcripts","text":"transcripts_folder Path folder containing transcript files names_to_exclude Vector names exclude analysis (default: \"dead_air\") write Whether write results file (default: FALSE) output_path Path output file (defaults \"engagement_metrics.csv\")","code":""},{"path":"https://revgizmo.github.io/engager/reference/analyze_transcripts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Transcripts (High-level orchestration) — analyze_transcripts","text":"Data frame engagement metrics","code":""},{"path":"https://revgizmo.github.io/engager/reference/anonymize_educational_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Anonymize Educational Data — anonymize_educational_data","title":"Anonymize Educational Data — anonymize_educational_data","text":"Advanced anonymization educational data preserves data utility ensuring FERPA compliance.","code":""},{"path":"https://revgizmo.github.io/engager/reference/anonymize_educational_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anonymize Educational Data — anonymize_educational_data","text":"","code":"anonymize_educational_data(   data = NULL,   method = c(\"mask\", \"hash\", \"pseudonymize\", \"aggregate\"),   preserve_columns = NULL,   hash_salt = NULL,   aggregation_level = c(\"individual\", \"section\", \"course\", \"institution\") )"},{"path":"https://revgizmo.github.io/engager/reference/anonymize_educational_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anonymize Educational Data — anonymize_educational_data","text":"data Data frame tibble containing educational data method Anonymization method: \"mask\", \"hash\", \"pseudonymize\", \"aggregate\" preserve_columns Vector column names preserve unchanged hash_salt Salt value hash-based anonymization aggregation_level Level aggregation: \"individual\", \"section\", \"course\", \"institution\"","code":""},{"path":"https://revgizmo.github.io/engager/reference/anonymize_educational_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anonymize Educational Data — anonymize_educational_data","text":"Anonymized data frame","code":""},{"path":"https://revgizmo.github.io/engager/reference/anonymize_educational_data.html","id":"anonymize-sample-data","dir":"Reference","previous_headings":"","what":"Anonymize sample data","title":"Anonymize Educational Data — anonymize_educational_data","text":"sample_data <- tibble::tibble( student_id = c(\"12345\", \"67890\"), preferred_name = c(\"Alice Johnson\", \"Bob Smith\"), section = c(\"\", \"B\"), participation_score = c(85, 92) )","code":""},{"path":"https://revgizmo.github.io/engager/reference/anonymize_educational_data.html","id":"mask-method-default-","dir":"Reference","previous_headings":"","what":"Mask method (default)","title":"Anonymize Educational Data — anonymize_educational_data","text":"anonymized <- anonymize_educational_data(sample_data, method = \"mask\")","code":""},{"path":"https://revgizmo.github.io/engager/reference/anonymize_educational_data.html","id":"hash-method-with-salt","dir":"Reference","previous_headings":"","what":"Hash method with salt","title":"Anonymize Educational Data — anonymize_educational_data","text":"hashed <- anonymize_educational_data(sample_data, method = \"hash\", hash_salt = \"my_salt\")","code":""},{"path":"https://revgizmo.github.io/engager/reference/anonymize_educational_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anonymize Educational Data — anonymize_educational_data","text":"","code":"sample_data <- tibble::tibble(   student_id = c(\"12345\", \"67890\"),   preferred_name = c(\"Alice Johnson\", \"Bob Smith\"),   section = c(\"A\", \"B\"),   participation_score = c(85, 92) ) anonymize_educational_data(sample_data) #> # A tibble: 2 × 4 #>   student_id preferred_name section participation_score #>   <chr>      <chr>          <chr>                 <dbl> #> 1 Student_1  Student_1      A                        85 #> 2 Student_2  Student_2      B                        92"},{"path":"https://revgizmo.github.io/engager/reference/apply_name_matching.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Name Matching — apply_name_matching","title":"Apply Name Matching — apply_name_matching","text":"Internal function apply name matching transcript data.","code":""},{"path":"https://revgizmo.github.io/engager/reference/apply_name_matching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Name Matching — apply_name_matching","text":"","code":"apply_name_matching(transcript_data, name_lookup, roster_data)"},{"path":"https://revgizmo.github.io/engager/reference/apply_name_matching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Name Matching — apply_name_matching","text":"transcript_data Transcript data match name_lookup Name lookup table roster_data Roster data matching","code":""},{"path":"https://revgizmo.github.io/engager/reference/apply_name_matching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Name Matching — apply_name_matching","text":"Matched transcript data","code":""},{"path":"https://revgizmo.github.io/engager/reference/apply_privacy_aware_matching.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Privacy-Aware Name Matching — apply_privacy_aware_matching","title":"Apply Privacy-Aware Name Matching — apply_privacy_aware_matching","text":"Internal function apply privacy-aware name matching using consistent hashing. function enhances existing matching logic privacy-first design.","code":""},{"path":"https://revgizmo.github.io/engager/reference/apply_privacy_aware_matching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Privacy-Aware Name Matching — apply_privacy_aware_matching","text":"","code":"apply_privacy_aware_matching(result, section_names_lookup, privacy_level)"},{"path":"https://revgizmo.github.io/engager/reference/apply_privacy_aware_matching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Privacy-Aware Name Matching — apply_privacy_aware_matching","text":"result Data frame containing matching results section_names_lookup Lookup table section names privacy_level Privacy level data processing","code":""},{"path":"https://revgizmo.github.io/engager/reference/apply_privacy_aware_matching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Privacy-Aware Name Matching — apply_privacy_aware_matching","text":"Enhanced matching results privacy-aware processing","code":""},{"path":"https://revgizmo.github.io/engager/reference/audit_ethical_usage.html","id":null,"dir":"Reference","previous_headings":"","what":"Audit Ethical Usage Patterns — audit_ethical_usage","title":"Audit Ethical Usage Patterns — audit_ethical_usage","text":"Analyzes usage patterns detect potential ethical concerns provides recommendations improvement.","code":""},{"path":"https://revgizmo.github.io/engager/reference/audit_ethical_usage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Audit Ethical Usage Patterns — audit_ethical_usage","text":"","code":"audit_ethical_usage(   function_calls = NULL,   data_sizes = NULL,   privacy_settings = NULL,   time_period = 30 )"},{"path":"https://revgizmo.github.io/engager/reference/audit_ethical_usage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Audit Ethical Usage Patterns — audit_ethical_usage","text":"function_calls Vector function names called data_sizes Vector data sizes processed privacy_settings Vector privacy settings used time_period Time period analysis days (default: 30)","code":""},{"path":"https://revgizmo.github.io/engager/reference/audit_ethical_usage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Audit Ethical Usage Patterns — audit_ethical_usage","text":"Audit report ethical usage analysis","code":""},{"path":"https://revgizmo.github.io/engager/reference/audit_ethical_usage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Audit Ethical Usage Patterns — audit_ethical_usage","text":"","code":"if (FALSE) { # Audit usage patterns audit <- audit_ethical_usage(   function_calls = c(\"analyze_transcripts\", \"plot_users\", \"write_metrics\"),   data_sizes = c(100, 150, 200),   privacy_settings = c(\"mask\", \"mask\", \"ferpa_strict\"),   time_period = 30 ) }"},{"path":"https://revgizmo.github.io/engager/reference/basic_transcript_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic Analysis Workflow for New Users — basic_transcript_analysis","title":"Basic Analysis Workflow for New Users — basic_transcript_analysis","text":"Simplified workflow guides new users basic analysis Zoom transcripts minimal complexity. Complete basic transcript analysis workflow main function new users. performs complete analysis workflow 5 simple steps: load, process, analyze, visualize, export.","code":""},{"path":"https://revgizmo.github.io/engager/reference/basic_transcript_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic Analysis Workflow for New Users — basic_transcript_analysis","text":"","code":"basic_transcript_analysis(   transcript_file,   output_dir = \"output\",   privacy_level = \"high\" )"},{"path":"https://revgizmo.github.io/engager/reference/basic_transcript_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic Analysis Workflow for New Users — basic_transcript_analysis","text":"transcript_file Path transcript file (VTT, TXT, CSV format) output_dir Output directory results (default: \"output\") privacy_level Privacy protection level: \"high\" (default), \"medium\", \"low\"","code":""},{"path":"https://revgizmo.github.io/engager/reference/basic_transcript_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic Analysis Workflow for New Users — basic_transcript_analysis","text":"List containing analysis results, plots, output directory path","code":""},{"path":"https://revgizmo.github.io/engager/reference/basic_transcript_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic Analysis Workflow for New Users — basic_transcript_analysis","text":"","code":"if (FALSE) { # Basic workflow for new users results <- basic_transcript_analysis(\"transcript.vtt\", \"output/\")  # With custom privacy level results <- basic_transcript_analysis(\"transcript.vtt\", \"output/\", \"medium\") }"},{"path":"https://revgizmo.github.io/engager/reference/batch_basic_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch analysis for multiple transcript files — batch_basic_analysis","title":"Batch analysis for multiple transcript files — batch_basic_analysis","text":"Process multiple transcript files one workflow","code":""},{"path":"https://revgizmo.github.io/engager/reference/batch_basic_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch analysis for multiple transcript files — batch_basic_analysis","text":"","code":"batch_basic_analysis(   transcript_files,   output_dir = \"batch_output\",   privacy_level = \"high\" )"},{"path":"https://revgizmo.github.io/engager/reference/batch_basic_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch analysis for multiple transcript files — batch_basic_analysis","text":"transcript_files Vector transcript file paths output_dir Output directory results privacy_level Privacy protection level","code":""},{"path":"https://revgizmo.github.io/engager/reference/batch_basic_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch analysis for multiple transcript files — batch_basic_analysis","text":"List analysis results file","code":""},{"path":"https://revgizmo.github.io/engager/reference/batch_basic_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch analysis for multiple transcript files — batch_basic_analysis","text":"","code":"if (FALSE) { # Batch analysis files <- c(\"session1.vtt\", \"session2.vtt\", \"session3.vtt\") results <- batch_basic_analysis(files, \"batch_output\") }"},{"path":"https://revgizmo.github.io/engager/reference/calculate_content_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Content Similarity Between Two Transcripts — calculate_content_similarity","title":"Calculate Content Similarity Between Two Transcripts — calculate_content_similarity","text":"function calculates similarity two transcript data frames based various metrics including speaker overlap, duration, word count, comment count, content similarity.","code":""},{"path":"https://revgizmo.github.io/engager/reference/calculate_content_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Content Similarity Between Two Transcripts — calculate_content_similarity","text":"","code":"calculate_content_similarity(   transcript1 = NULL,   transcript2 = NULL,   names_to_exclude = c(\"dead_air\") )"},{"path":"https://revgizmo.github.io/engager/reference/calculate_content_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Content Similarity Between Two Transcripts — calculate_content_similarity","text":"transcript1 First transcript data frame transcript2 Second transcript data frame names_to_exclude Vector names exclude comparison (default: \"dead_air\")","code":""},{"path":"https://revgizmo.github.io/engager/reference/calculate_content_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Content Similarity Between Two Transcripts — calculate_content_similarity","text":"Similarity score 0 1","code":""},{"path":"https://revgizmo.github.io/engager/reference/check_data_retention_policy.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Data Retention Policy — check_data_retention_policy","title":"Check Data Retention Policy — check_data_retention_policy","text":"Validates data retention policies identifies data disposed according institutional policies.","code":""},{"path":"https://revgizmo.github.io/engager/reference/check_data_retention_policy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Data Retention Policy — check_data_retention_policy","text":"","code":"check_data_retention_policy(   data = NULL,   retention_period = c(\"academic_year\", \"semester\", \"quarter\", \"custom\"),   custom_retention_days = NULL,   date_column = NULL,   current_date = Sys.Date() )"},{"path":"https://revgizmo.github.io/engager/reference/check_data_retention_policy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Data Retention Policy — check_data_retention_policy","text":"data Data frame check retention policy compliance retention_period Retention period: \"academic_year\", \"semester\", \"quarter\", \"custom\" custom_retention_days Custom retention period days (\"custom\" period) date_column Column name containing dates check current_date Current date comparison (default: Sys.Date())","code":""},{"path":"https://revgizmo.github.io/engager/reference/check_data_retention_policy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Data Retention Policy — check_data_retention_policy","text":"List containing compliance status retention analysis","code":""},{"path":"https://revgizmo.github.io/engager/reference/check_data_retention_policy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Data Retention Policy — check_data_retention_policy","text":"","code":"if (FALSE) { # Check data retention policy sample_data <- tibble::tibble(   student_id = c(\"12345\", \"67890\"),   session_date = as.Date(c(\"2024-01-15\", \"2024-02-20\")),   participation_score = c(85, 92) )  retention_check <- check_data_retention_policy(   sample_data,   retention_period = \"academic_year\",   date_column = \"session_date\" ) print(retention_check$compliant) }"},{"path":"https://revgizmo.github.io/engager/reference/consolidate_transcript.html","id":null,"dir":"Reference","previous_headings":"","what":"Consolidate Transcript — consolidate_transcript","title":"Consolidate Transcript — consolidate_transcript","text":"Take tibble containing comments Zoom recording transcript return tibble consolidates consecutive comments speaker time end first comment start second comment less max_pause_sec seconds. function addresses issue Zoom transcript speaker speaking continuous sentence, Zoom transcript cut comment two lines. example, comment \"single sentence.\" often split \"\" \"single sentence\". function stitches together \"single sentence.\" start time consolidated comment beginning first row end time consolidated comment ending last row.","code":""},{"path":"https://revgizmo.github.io/engager/reference/consolidate_transcript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consolidate Transcript — consolidate_transcript","text":"","code":"consolidate_transcript(df = NULL, max_pause_sec = 1)"},{"path":"https://revgizmo.github.io/engager/reference/consolidate_transcript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consolidate Transcript — consolidate_transcript","text":"df tibble containing transcript comments columns: name, start, end, comment max_pause_sec Maximum pause seconds comments consolidate (default: 1)","code":""},{"path":"https://revgizmo.github.io/engager/reference/consolidate_transcript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consolidate Transcript — consolidate_transcript","text":"tibble consolidated comments transcript. consolidate_transcript(df = \"NULL\")","code":""},{"path":"https://revgizmo.github.io/engager/reference/convert_error_to_user_friendly.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert technical error to user-friendly message — convert_error_to_user_friendly","title":"Convert technical error to user-friendly message — convert_error_to_user_friendly","text":"Converts technical error messages helpful, actionable guidance","code":""},{"path":"https://revgizmo.github.io/engager/reference/convert_error_to_user_friendly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert technical error to user-friendly message — convert_error_to_user_friendly","text":"","code":"convert_error_to_user_friendly(error_message, context)"},{"path":"https://revgizmo.github.io/engager/reference/convert_error_to_user_friendly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert technical error to user-friendly message — convert_error_to_user_friendly","text":"error_message Technical error message context Operation context","code":""},{"path":"https://revgizmo.github.io/engager/reference/convert_error_to_user_friendly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert technical error to user-friendly message — convert_error_to_user_friendly","text":"User-friendly error message","code":""},{"path":"https://revgizmo.github.io/engager/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"Package Data Documentation — data","title":"Package Data Documentation — data","text":"Zoom transcript data users provide.","code":""},{"path":"https://revgizmo.github.io/engager/reference/data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Package Data Documentation — data","text":"engager package designed work user-provided data rather including static datasets. approach ensures privacy allows package used institutional data without concerns data sharing licensing. package works user-provided Zoom transcripts related institutional data. static datasets included package. Typical workflows involve loading transcripts, analyzing engagement, exporting metrics. See function help pages runnable examples. See also: load_zoom_transcript() loading transcript data write_metrics() exporting analysis results. package works user-provided data includes static datasets.","code":""},{"path":"https://revgizmo.github.io/engager/reference/detect_duplicate_transcripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Duplicate Transcripts — detect_duplicate_transcripts","title":"Detect Duplicate Transcripts — detect_duplicate_transcripts","text":"Identifies analyzes duplicate Zoom transcript files using multiple detection methods. function helps clean transcript datasets finding files contain similar identical content, can occur multiple transcript formats generated recording session.","code":""},{"path":"https://revgizmo.github.io/engager/reference/detect_duplicate_transcripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Duplicate Transcripts — detect_duplicate_transcripts","text":"","code":"detect_duplicate_transcripts(   transcript_list = NULL,   data_folder = \".\",   transcripts_folder = \"transcripts\",   similarity_threshold = 0.95,   method = c(\"hybrid\", \"content\", \"metadata\"),   names_to_exclude = c(\"dead_air\") )"},{"path":"https://revgizmo.github.io/engager/reference/detect_duplicate_transcripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Duplicate Transcripts — detect_duplicate_transcripts","text":"transcript_list tibble transcript_file column containing file names data_folder Base folder containing data files (default: \".\") transcripts_folder Subfolder transcript files stored (default: \"transcripts\") similarity_threshold Similarity threshold duplicate detection (default: 0.95) method Detection method: \"hybrid\" (default), \"content\", \"metadata\" names_to_exclude Vector names exclude comparison (default: c(\"dead_air\"))","code":""},{"path":"https://revgizmo.github.io/engager/reference/detect_duplicate_transcripts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Duplicate Transcripts — detect_duplicate_transcripts","text":"List containing duplicate groups, similarity matrix, recommendations","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/reference/detect_duplicate_transcripts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Duplicate Transcripts — detect_duplicate_transcripts","text":"","code":"# Create sample transcript list transcript_list <- tibble::tibble(   transcript_file = c(     \"GMT20240115-100000_Recording.transcript.vtt\",     \"GMT20240115-100000_Recording.cc.vtt\",     \"GMT20240116-140000_Recording.transcript.vtt\"   ) )  # Detect duplicates in a transcript list duplicates <- detect_duplicate_transcripts(transcript_list) #> Warning: No transcript files found in the specified directory  # View duplicate groups duplicates$duplicate_groups #> list()  # View recommendations duplicates$recommendations #> character(0)  # Use different detection method content_duplicates <- detect_duplicate_transcripts(   transcript_list,   method = \"content\",   similarity_threshold = 0.9 ) #> Warning: No transcript files found in the specified directory"},{"path":"https://revgizmo.github.io/engager/reference/engager-package.html","id":null,"dir":"Reference","previous_headings":"","what":"engager: Student Engagement Analysis Package — engager-package","title":"engager: Student Engagement Analysis Package — engager-package","text":"Tools processing Zoom transcripts, matching names rosters, computing engagement metrics, creating privacy-aware visualizations reports. package emphasizes privacy-first design FERPA support masked outputs default.","code":""},{"path":[]},{"path":"https://revgizmo.github.io/engager/reference/engager-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"engager: Student Engagement Analysis Package — engager-package","text":"Maintainer: Conor Healy conorhealy@berkeley.edu","code":""},{"path":"https://revgizmo.github.io/engager/reference/ensure_privacy.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure Privacy for Outputs — ensure_privacy","title":"Ensure Privacy for Outputs — ensure_privacy","text":"Applies privacy rules objects returned, written, plotted. default, masks personally identifiable information tabular data FERPA-safe placeholders.","code":""},{"path":"https://revgizmo.github.io/engager/reference/ensure_privacy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure Privacy for Outputs — ensure_privacy","text":"","code":"ensure_privacy(   x = NULL,   privacy_level = getOption(\"engager.privacy_level\", \"mask\"),   id_columns = c(\"preferred_name\", \"name\", \"first_last\", \"name_raw\", \"student_id\",     \"email\", \"transcript_name\", \"formal_name\"),   audit_log = TRUE )"},{"path":"https://revgizmo.github.io/engager/reference/ensure_privacy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure Privacy for Outputs — ensure_privacy","text":"x Data object apply privacy rules (typically tibble) privacy_level Privacy level: \"mask\", \"ferpa_strict\", \"ferpa_standard\", \"none\" id_columns Vector column names treat identifiers (default: common name columns) audit_log Whether log privacy operations (default: TRUE)","code":""},{"path":"https://revgizmo.github.io/engager/reference/ensure_privacy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure Privacy for Outputs — ensure_privacy","text":"Privacy-compliant version input object df <- tibble::tibble( section = c(\"\", \"\", \"B\"), preferred_name = c(\"Alice Johnson\", \"Bob Lee\", \"Cara Diaz\"), session_ct = c(3, 5, 2) ) ensure_privacy(df)","code":""},{"path":"https://revgizmo.github.io/engager/reference/ensure_privacy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ensure Privacy for Outputs — ensure_privacy","text":"CRITICAL ETHICAL COMPLIANCE: function designed promote participation equity educational improvement, surveillance. outputs automatically anonymized default protect student privacy ensure FERPA compliance. default behavior controlled global option engager.privacy_level, set \"mask\" package load. Use set_privacy_defaults() change runtime.","code":""},{"path":"https://revgizmo.github.io/engager/reference/ethical_compliance.html","id":null,"dir":"Reference","previous_headings":"","what":"Ethical Compliance Functions — ethical_compliance","title":"Ethical Compliance Functions — ethical_compliance","text":"Comprehensive ethical compliance tools educational data analysis. functions ensure package promotes participation equity rather surveillance maintains highest ethical standards educational research.","code":""},{"path":"https://revgizmo.github.io/engager/reference/ferpa_compliance.html","id":null,"dir":"Reference","previous_headings":"","what":"FERPA Compliance Functions — ferpa_compliance","title":"FERPA Compliance Functions — ferpa_compliance","text":"Functions validate ensure FERPA compliance educational data. functions help institutions maintain compliance Family Educational Rights Privacy Act (FERPA) using package.","code":""},{"path":"https://revgizmo.github.io/engager/reference/find_function_for_task.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Help System — find_function_for_task","title":"Interactive Help System — find_function_for_task","text":"Provides interactive help function discovery help users find right functions specific tasks. Interactive function discovery Helps users find right function based want ","code":""},{"path":"https://revgizmo.github.io/engager/reference/find_function_for_task.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Help System — find_function_for_task","text":"","code":"find_function_for_task(task)"},{"path":"https://revgizmo.github.io/engager/reference/find_function_for_task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive Help System — find_function_for_task","text":"task Description user wants ","code":""},{"path":"https://revgizmo.github.io/engager/reference/find_function_for_task.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive Help System — find_function_for_task","text":"","code":"if (FALSE) { find_function_for_task(\"load transcript file\") find_function_for_task(\"create visualizations\") find_function_for_task(\"export results\") }"},{"path":"https://revgizmo.github.io/engager/reference/get_next_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Get next UX level — get_next_level","title":"Get next UX level — get_next_level","text":"Get next UX level","code":""},{"path":"https://revgizmo.github.io/engager/reference/get_next_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get next UX level — get_next_level","text":"","code":"get_next_level(current_level)"},{"path":"https://revgizmo.github.io/engager/reference/get_next_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get next UX level — get_next_level","text":"current_level Current UX level","code":""},{"path":"https://revgizmo.github.io/engager/reference/get_next_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get next UX level — get_next_level","text":"Next UX level","code":""},{"path":"https://revgizmo.github.io/engager/reference/get_smart_recommendations.html","id":null,"dir":"Reference","previous_headings":"","what":"Smart function recommendations — get_smart_recommendations","title":"Smart function recommendations — get_smart_recommendations","text":"Provides intelligent function recommendations based user context","code":""},{"path":"https://revgizmo.github.io/engager/reference/get_smart_recommendations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smart function recommendations — get_smart_recommendations","text":"","code":"get_smart_recommendations(context)"},{"path":"https://revgizmo.github.io/engager/reference/get_smart_recommendations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smart function recommendations — get_smart_recommendations","text":"context User's current context situation","code":""},{"path":"https://revgizmo.github.io/engager/reference/get_smart_recommendations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smart function recommendations — get_smart_recommendations","text":"","code":"if (FALSE) { get_smart_recommendations(\"new user\") get_smart_recommendations(\"batch processing\") get_smart_recommendations(\"privacy concerns\") }"},{"path":"https://revgizmo.github.io/engager/reference/get_ux_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current user experience level — get_ux_level","title":"Get current user experience level — get_ux_level","text":"Get current user experience level","code":""},{"path":"https://revgizmo.github.io/engager/reference/get_ux_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current user experience level — get_ux_level","text":"","code":"get_ux_level()"},{"path":"https://revgizmo.github.io/engager/reference/get_ux_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current user experience level — get_ux_level","text":"Current UX level","code":""},{"path":"https://revgizmo.github.io/engager/reference/get_ux_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get current user experience level — get_ux_level","text":"","code":"if (FALSE) { current_level <- get_ux_level() }"},{"path":"https://revgizmo.github.io/engager/reference/get_visible_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Function Visibility Management System — get_visible_functions","title":"Function Visibility Management System — get_visible_functions","text":"Manages functions visible users based experience level implement progressive disclosure simplify user interface. Get visible functions user experience level","code":""},{"path":"https://revgizmo.github.io/engager/reference/get_visible_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function Visibility Management System — get_visible_functions","text":"","code":"get_visible_functions(level = \"basic\")"},{"path":"https://revgizmo.github.io/engager/reference/get_visible_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function Visibility Management System — get_visible_functions","text":"level User experience level: \"basic\", \"intermediate\", \"advanced\", \"expert\"","code":""},{"path":"https://revgizmo.github.io/engager/reference/get_visible_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function Visibility Management System — get_visible_functions","text":"Vector function names visible level","code":""},{"path":"https://revgizmo.github.io/engager/reference/get_visible_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function Visibility Management System — get_visible_functions","text":"","code":"if (FALSE) { # Get functions visible to basic users basic_functions <- get_visible_functions(\"basic\")  # Get functions visible to intermediate users intermediate_functions <- get_visible_functions(\"intermediate\") }"},{"path":"https://revgizmo.github.io/engager/reference/grapes-greater-than-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://revgizmo.github.io/engager/reference/load_zoom_transcript.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Zoom Transcript — load_zoom_transcript","title":"Load Zoom Transcript — load_zoom_transcript","text":"Load Zoom recording transcript return tibble containing comments Zoom recording transcript","code":""},{"path":"https://revgizmo.github.io/engager/reference/load_zoom_transcript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Zoom Transcript — load_zoom_transcript","text":"","code":"load_zoom_transcript(transcript_file_path = NULL)"},{"path":"https://revgizmo.github.io/engager/reference/load_zoom_transcript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Zoom Transcript — load_zoom_transcript","text":"transcript_file_path Path transcript file load","code":""},{"path":"https://revgizmo.github.io/engager/reference/load_zoom_transcript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Zoom Transcript — load_zoom_transcript","text":"tibble containing transcript data, NULL file empty","code":""},{"path":"https://revgizmo.github.io/engager/reference/load_zoom_transcript.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Zoom Transcript — load_zoom_transcript","text":"Original code posted Conor Healy: https://ucbischool.slack.com/archives/C02A36407K9/p1631855705002000 Addition wordcount Brooks Ambrose: https://gist.github.com/brooksambrose/1a8a673eb3bf884c1868ad4d80f08246","code":""},{"path":"https://revgizmo.github.io/engager/reference/load_zoom_transcript.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Zoom Transcript — load_zoom_transcript","text":"","code":"# Load a sample transcript from the package's extdata directory transcript_file <- system.file(\"extdata/transcripts/GMT20240124-202901_Recording.transcript.vtt\",   package = \"engager\" ) load_zoom_transcript(transcript_file_path = transcript_file) #> # A tibble: 102 × 8 #>    transcript_file       comment_num name  comment start     end        duration #>    <chr>                 <chr>       <chr> <chr>   <time>    <time>     <drtn>   #>  1 GMT20240124-202901_R… 1           Srij… Hi!     00'00.05\" 00'01.790\"  1.740 … #>  2 GMT20240124-202901_R… 2           Cono… Get th… 00'02.07\" 00'04.050\"  1.980 … #>  3 GMT20240124-202901_R… 3           Srij… Hello!… 00'05.14\" 00'08.310\"  3.170 … #>  4 GMT20240124-202901_R… 4           Srij… So      00'09.71\" 00'11.670\"  1.960 … #>  5 GMT20240124-202901_R… 5           Cono… let's … 00'12.16\" 00'14.309\"  2.149 … #>  6 GMT20240124-202901_R… 6           Cono… Studen… 00'14.55\" 00'30.599\" 16.049 … #>  7 GMT20240124-202901_R… 7           Cono… that.   00'31.44\" 00'32.390\"  0.950 … #>  8 GMT20240124-202901_R… 8           Dr. … and I'… 00'32.52\" 00'43.089\" 10.569 … #>  9 GMT20240124-202901_R… 9           Dr. … Can yo… 00'43.50\" 00'51.110\"  7.610 … #> 10 GMT20240124-202901_R… 10          Dr. … yeah, … 00'51.13\" 00'58.459\"  7.329 … #> # ℹ 92 more rows #> # ℹ 1 more variable: wordcount <int>"},{"path":"https://revgizmo.github.io/engager/reference/lookup_merge_utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup Merge Utilities (Safe, Transactional, UTF-8) — lookup_merge_utils","title":"Lookup Merge Utilities (Safe, Transactional, UTF-8) — lookup_merge_utils","text":"Utilities safely read, merge, write participant lookup configuration (section_names_lookup.csv). operations read--merge memory; writes opt-transactional timestamped backups prevent accidental data loss.","code":""},{"path":"https://revgizmo.github.io/engager/reference/lookup_merge_utils.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lookup Merge Utilities (Safe, Transactional, UTF-8) — lookup_merge_utils","text":"Expected columns lookup data frame: transcript_name preferred_name formal_name participant_type (e.g., instructor, enrolled_student, guest, unknown) student_id notes (optional)","code":""},{"path":"https://revgizmo.github.io/engager/reference/make_blank_cancelled_classes_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Cancelled Classes Tibble This function creates an empty tibble for recording of cancelled class sessions for scheduled classes where a Zoom recording is not expected. — make_blank_cancelled_classes_df","title":"Make Cancelled Classes Tibble This function creates an empty tibble for recording of cancelled class sessions for scheduled classes where a Zoom recording is not expected. — make_blank_cancelled_classes_df","text":"zoom recording expected.","code":""},{"path":"https://revgizmo.github.io/engager/reference/make_blank_cancelled_classes_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Cancelled Classes Tibble This function creates an empty tibble for recording of cancelled class sessions for scheduled classes where a Zoom recording is not expected. — make_blank_cancelled_classes_df","text":"","code":"make_blank_cancelled_classes_df()"},{"path":"https://revgizmo.github.io/engager/reference/make_blank_section_names_lookup_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Blank Section Names Lookup Template — make_blank_section_names_lookup_csv","title":"Create Blank Section Names Lookup Template — make_blank_section_names_lookup_csv","text":"Creates empty tibble template customizing student names section. function generates properly structured data frame can filled map different name formats (preferred names, formal names, transcript names) students across different course sections.","code":""},{"path":"https://revgizmo.github.io/engager/reference/make_blank_section_names_lookup_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Blank Section Names Lookup Template — make_blank_section_names_lookup_csv","text":"","code":"make_blank_section_names_lookup_csv()"},{"path":"https://revgizmo.github.io/engager/reference/plot_users.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Users — plot_users","title":"Plot Users — plot_users","text":"Unified plotting function engagement metrics privacy-aware options.","code":""},{"path":"https://revgizmo.github.io/engager/reference/plot_users.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Users — plot_users","text":"","code":"plot_users(   data = NULL,   metric = \"session_ct\",   student_col = \"name\",   facet_by = c(\"section\", \"transcript_file\", \"none\"),   mask_by = c(\"name\", \"rank\"),   privacy_level = getOption(\"engager.privacy_level\", \"mask\"),   metrics_lookup_df = NULL )"},{"path":"https://revgizmo.github.io/engager/reference/plot_users.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Users — plot_users","text":"data tibble containing data plot metric Column name metric plot (default: \"session_ct\") student_col Column name student identification (default: \"name\") facet_by Faceting option: \"section\", \"transcript_file\", \"none\" (default: \"section\") mask_by Masking option: \"name\" \"rank\" (default: \"name\") privacy_level Privacy level data visualization (default: global option) metrics_lookup_df Optional lookup table metric names (default: NULL)","code":""},{"path":"https://revgizmo.github.io/engager/reference/plot_users.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Users — plot_users","text":"ggplot2 object","code":""},{"path":"https://revgizmo.github.io/engager/reference/privacy_audit.html","id":null,"dir":"Reference","previous_headings":"","what":"Privacy Audit — privacy_audit","title":"Privacy Audit — privacy_audit","text":"Summarize identifier columns present many values masked.","code":""},{"path":"https://revgizmo.github.io/engager/reference/privacy_audit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Privacy Audit — privacy_audit","text":"","code":"privacy_audit(   data = NULL,   id_columns = c(\"preferred_name\", \"name\", \"first_last\", \"name_raw\", \"student_id\",     \"email\") )"},{"path":"https://revgizmo.github.io/engager/reference/privacy_audit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Privacy Audit — privacy_audit","text":"data tibble containing data audit id_columns Vector column names check identifiers (default: common name columns)","code":""},{"path":"https://revgizmo.github.io/engager/reference/privacy_audit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Privacy Audit — privacy_audit","text":"tibble containing audit results columns: column, values, non_empty, masked_estimate","code":""},{"path":"https://revgizmo.github.io/engager/reference/process_zoom_transcript.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Zoom Transcript — process_zoom_transcript","title":"Process Zoom Transcript — process_zoom_transcript","text":"Process Zoom recording transcript given parameters return tibble containing consolidated annotated comments.","code":""},{"path":"https://revgizmo.github.io/engager/reference/process_zoom_transcript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Zoom Transcript — process_zoom_transcript","text":"","code":"process_zoom_transcript(   transcript_file_path = \"\",   consolidate_comments = TRUE,   max_pause_sec = 1,   add_dead_air = TRUE,   dead_air_name = \"dead_air\",   na_name = \"unknown\",   transcript_df = NULL )"},{"path":"https://revgizmo.github.io/engager/reference/process_zoom_transcript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Zoom Transcript — process_zoom_transcript","text":"transcript_file_path Path transcript file process consolidate_comments Whether consolidate consecutive comments speaker (default: TRUE) max_pause_sec Maximum pause seconds comments consolidate (default: 1) add_dead_air Whether add dead air rows gaps transcript (default: TRUE) dead_air_name Name use dead air periods (default: 'dead_air') na_name Name use unknown speakers (default: 'unknown') transcript_df Pre-loaded transcript data frame (alternative transcript_file_path)","code":""},{"path":"https://revgizmo.github.io/engager/reference/process_zoom_transcript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Zoom Transcript — process_zoom_transcript","text":"tibble containing processed transcript data","code":""},{"path":"https://revgizmo.github.io/engager/reference/process_zoom_transcript.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process Zoom Transcript — process_zoom_transcript","text":"Original code posted Conor Healy: https://ucbischool.slack.com/archives/C02A36407K9/p1631855705002000 Addition wordcount, wordcount_perc, wpm Brooks Ambrose: https://gist.github.com/brooksambrose/1a8a673eb3bf884c1868ad4d80f08246","code":""},{"path":"https://revgizmo.github.io/engager/reference/process_zoom_transcript.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Zoom Transcript — process_zoom_transcript","text":"","code":"# Load a sample transcript from the package's extdata directory transcript_file <- system.file(\"extdata/transcripts/GMT20240124-202901_Recording.transcript.vtt\",   package = \"engager\" ) process_zoom_transcript(transcript_file_path = transcript_file) #> # A tibble: 90 × 8 #>    transcript_file          name  comment start     end       duration wordcount #>    <chr>                    <chr> <chr>   <time>    <time>       <dbl>     <int> #>  1 GMT20240124-202901_Reco… dead… NA      00'00.00\" 00'00.05\"   0.0500        NA #>  2 GMT20240124-202901_Reco… Srij… Hi!     00'00.05\" 00'01.79\"   1.74           1 #>  3 GMT20240124-202901_Reco… dead… NA      00'01.79\" 00'02.07\"   0.280         NA #>  4 GMT20240124-202901_Reco… Cono… Get th… 00'02.07\" 00'04.05\"   1.98           4 #>  5 GMT20240124-202901_Reco… dead… NA      00'04.05\" 00'05.14\"   1.09          NA #>  6 GMT20240124-202901_Reco… Srij… Hello!… 00'05.14\" 00'08.31\"   3.17           8 #>  7 GMT20240124-202901_Reco… dead… NA      00'08.31\" 00'09.71\"   1.40          NA #>  8 GMT20240124-202901_Reco… Srij… So      00'09.71\" 00'11.67\"   1.96           1 #>  9 GMT20240124-202901_Reco… dead… NA      00'11.67\" 00'31.44\"  19.8           NA #> 10 GMT20240124-202901_Reco… Cono… let's … 00'31.44\" 00'32.39\"   0.950         38 #> # ℹ 80 more rows #> # ℹ 1 more variable: comment_num <int>"},{"path":"https://revgizmo.github.io/engager/reference/quick_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick analysis for single transcript file — quick_analysis","title":"Quick analysis for single transcript file — quick_analysis","text":"Simplified version users just want quick results","code":""},{"path":"https://revgizmo.github.io/engager/reference/quick_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick analysis for single transcript file — quick_analysis","text":"","code":"quick_analysis(transcript_file)"},{"path":"https://revgizmo.github.io/engager/reference/quick_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick analysis for single transcript file — quick_analysis","text":"transcript_file Path transcript file","code":""},{"path":"https://revgizmo.github.io/engager/reference/quick_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick analysis for single transcript file — quick_analysis","text":"Analysis results","code":""},{"path":"https://revgizmo.github.io/engager/reference/quick_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick analysis for single transcript file — quick_analysis","text":"","code":"if (FALSE) { # Quick analysis results <- quick_analysis(\"transcript.vtt\") }"},{"path":"https://revgizmo.github.io/engager/reference/safe_name_matching_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe Name Matching Workflow — safe_name_matching_workflow","title":"Safe Name Matching Workflow — safe_name_matching_workflow","text":"Main workflow function privacy-first name matching. Implements two-stage processing: Stage 1 (unmasked matching memory) Stage 2 (privacy masking outputs). Provides configuration-driven behavior unmatched names.","code":""},{"path":"https://revgizmo.github.io/engager/reference/safe_name_matching_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe Name Matching Workflow — safe_name_matching_workflow","text":"","code":"safe_name_matching_workflow(   transcript_file_path = NULL,   roster_data = NULL,   privacy_level = getOption(\"engager.privacy_level\", \"mask\"),   unmatched_names_action = getOption(\"engager.unmatched_names_action\", \"stop\"),   data_folder = \".\",   section_names_lookup_file = \"section_names_lookup.csv\" )"},{"path":"https://revgizmo.github.io/engager/reference/safe_name_matching_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe Name Matching Workflow — safe_name_matching_workflow","text":"transcript_file_path Path transcript file process roster_data Data frame containing roster information privacy_level Privacy level apply. One c(\"ferpa_strict\", \"ferpa_standard\", \"mask\", \"none\"). Defaults getOption(\"engager.privacy_level\", \"mask\"). unmatched_names_action Action take unmatched names. One c(\"stop\", \"warn\"). Defaults getOption(\"engager.unmatched_names_action\", \"stop\"). data_folder Directory containing data files section_names_lookup_file Name section names lookup file","code":""},{"path":"https://revgizmo.github.io/engager/reference/safe_name_matching_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe Name Matching Workflow — safe_name_matching_workflow","text":"Processed transcript data privacy-aware name matching applied","code":""},{"path":"https://revgizmo.github.io/engager/reference/safe_name_matching_workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safe Name Matching Workflow — safe_name_matching_workflow","text":"","code":"# Default behavior (maximum privacy) # result <- safe_name_matching_workflow( #   transcript_file_path = \"transcript.vtt\", #   roster_data = roster_df # ) # # Opt-in for convenience # result <- safe_name_matching_workflow( #   transcript_file_path = \"transcript.vtt\", #   roster_data = roster_df, #   unmatched_names_action = \"warn\" # )"},{"path":"https://revgizmo.github.io/engager/reference/schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Schema validators and contracts — schema","title":"Schema validators and contracts — schema","text":"Defines simple schema validation helpers canonical schemas used throughout package. Keep intentionally lightweight avoid dependency bloat.","code":""},{"path":"https://revgizmo.github.io/engager/reference/set_ux_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Set user experience level — set_ux_level","title":"Set user experience level — set_ux_level","text":"Set user experience level","code":""},{"path":"https://revgizmo.github.io/engager/reference/set_ux_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set user experience level — set_ux_level","text":"","code":"set_ux_level(level = \"basic\")"},{"path":"https://revgizmo.github.io/engager/reference/set_ux_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set user experience level — set_ux_level","text":"level User experience level: \"basic\", \"intermediate\", \"advanced\", \"expert\"","code":""},{"path":"https://revgizmo.github.io/engager/reference/set_ux_level.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set user experience level — set_ux_level","text":"","code":"if (FALSE) { # Set to basic level (5 essential functions) set_ux_level(\"basic\")  # Set to intermediate level (15 functions) set_ux_level(\"intermediate\") }"},{"path":"https://revgizmo.github.io/engager/reference/show_available_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Show functions available at current UX level — show_available_functions","title":"Show functions available at current UX level — show_available_functions","text":"Show functions available current UX level","code":""},{"path":"https://revgizmo.github.io/engager/reference/show_available_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show functions available at current UX level — show_available_functions","text":"","code":"show_available_functions(level = NULL)"},{"path":"https://revgizmo.github.io/engager/reference/show_available_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show functions available at current UX level — show_available_functions","text":"level User experience level (optional, uses current level specified)","code":""},{"path":"https://revgizmo.github.io/engager/reference/show_available_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show functions available at current UX level — show_available_functions","text":"","code":"if (FALSE) { # Show functions at current level show_available_functions()  # Show functions at specific level show_available_functions(\"intermediate\") }"},{"path":"https://revgizmo.github.io/engager/reference/show_error_recovery.html","id":null,"dir":"Reference","previous_headings":"","what":"Show error recovery suggestions — show_error_recovery","title":"Show error recovery suggestions — show_error_recovery","text":"Provides specific recovery suggestions based error type","code":""},{"path":"https://revgizmo.github.io/engager/reference/show_error_recovery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show error recovery suggestions — show_error_recovery","text":"","code":"show_error_recovery(error_type)"},{"path":"https://revgizmo.github.io/engager/reference/show_error_recovery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show error recovery suggestions — show_error_recovery","text":"error_type Type error encountered","code":""},{"path":"https://revgizmo.github.io/engager/reference/show_error_recovery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show error recovery suggestions — show_error_recovery","text":"","code":"if (FALSE) { show_error_recovery(\"file_not_found\") show_error_recovery(\"permission_denied\") }"},{"path":"https://revgizmo.github.io/engager/reference/show_function_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Show function categories and counts — show_function_categories","title":"Show function categories and counts — show_function_categories","text":"Show function categories counts","code":""},{"path":"https://revgizmo.github.io/engager/reference/show_function_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show function categories and counts — show_function_categories","text":"","code":"show_function_categories()"},{"path":"https://revgizmo.github.io/engager/reference/show_function_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show function categories and counts — show_function_categories","text":"","code":"if (FALSE) { show_function_categories() }"},{"path":"https://revgizmo.github.io/engager/reference/show_function_help.html","id":null,"dir":"Reference","previous_headings":"","what":"Show help for specific function — show_function_help","title":"Show help for specific function — show_function_help","text":"Show help specific function","code":""},{"path":"https://revgizmo.github.io/engager/reference/show_function_help.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show help for specific function — show_function_help","text":"","code":"show_function_help(function_name)"},{"path":"https://revgizmo.github.io/engager/reference/show_function_help.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show help for specific function — show_function_help","text":"function_name Name function get help ","code":""},{"path":"https://revgizmo.github.io/engager/reference/show_function_help.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show help for specific function — show_function_help","text":"","code":"if (FALSE) { show_function_help(\"load_zoom_transcript\") show_function_help(\"basic_transcript_analysis\") }"},{"path":"https://revgizmo.github.io/engager/reference/show_getting_started.html","id":null,"dir":"Reference","previous_headings":"","what":"User Guidance and Help System — show_getting_started","title":"User Guidance and Help System — show_getting_started","text":"Provides contextual help guidance users navigate package effectively find right functions tasks. Show getting started guide Displays comprehensive getting started guide new users","code":""},{"path":"https://revgizmo.github.io/engager/reference/show_getting_started.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User Guidance and Help System — show_getting_started","text":"","code":"show_getting_started()"},{"path":"https://revgizmo.github.io/engager/reference/show_getting_started.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"User Guidance and Help System — show_getting_started","text":"","code":"if (FALSE) { show_getting_started() }"},{"path":"https://revgizmo.github.io/engager/reference/show_privacy_guidance.html","id":null,"dir":"Reference","previous_headings":"","what":"Show privacy and ethics guidance — show_privacy_guidance","title":"Show privacy and ethics guidance — show_privacy_guidance","text":"Show privacy ethics guidance","code":""},{"path":"https://revgizmo.github.io/engager/reference/show_privacy_guidance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show privacy and ethics guidance — show_privacy_guidance","text":"","code":"show_privacy_guidance()"},{"path":"https://revgizmo.github.io/engager/reference/show_privacy_guidance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show privacy and ethics guidance — show_privacy_guidance","text":"","code":"if (FALSE) { show_privacy_guidance() }"},{"path":"https://revgizmo.github.io/engager/reference/show_troubleshooting.html","id":null,"dir":"Reference","previous_headings":"","what":"Show troubleshooting guide — show_troubleshooting","title":"Show troubleshooting guide — show_troubleshooting","text":"Show troubleshooting guide","code":""},{"path":"https://revgizmo.github.io/engager/reference/show_troubleshooting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show troubleshooting guide — show_troubleshooting","text":"","code":"show_troubleshooting()"},{"path":"https://revgizmo.github.io/engager/reference/show_troubleshooting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show troubleshooting guide — show_troubleshooting","text":"","code":"if (FALSE) { show_troubleshooting() }"},{"path":"https://revgizmo.github.io/engager/reference/show_workflow_help.html","id":null,"dir":"Reference","previous_headings":"","what":"Show workflow help and templates — show_workflow_help","title":"Show workflow help and templates — show_workflow_help","text":"Show workflow help templates","code":""},{"path":"https://revgizmo.github.io/engager/reference/show_workflow_help.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show workflow help and templates — show_workflow_help","text":"","code":"show_workflow_help()"},{"path":"https://revgizmo.github.io/engager/reference/show_workflow_help.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show workflow help and templates — show_workflow_help","text":"","code":"if (FALSE) { show_workflow_help() }"},{"path":"https://revgizmo.github.io/engager/reference/summarize_transcript_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Transcript Files — summarize_transcript_files","title":"Summarize Transcript Files — summarize_transcript_files","text":"Summarize multiple transcript files return aggregated metrics. tibble additional columns beyond 'transcript_file' provided, metadata columns preserved output.","code":""},{"path":"https://revgizmo.github.io/engager/reference/summarize_transcript_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Transcript Files — summarize_transcript_files","text":"","code":"summarize_transcript_files(   transcript_file_names = NULL,   data_folder = \".\",   transcripts_folder = \"transcripts\",   names_to_exclude = NULL,   deduplicate_content = FALSE,   similarity_threshold = 0.95,   duplicate_method = c(\"hybrid\", \"content\", \"metadata\") )"},{"path":"https://revgizmo.github.io/engager/reference/summarize_transcript_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Transcript Files — summarize_transcript_files","text":"transcript_file_names Vector transcript file names tibble transcript_file column data_folder Base folder containing data files (default: \".\") transcripts_folder Subfolder transcript files stored (default: \"transcripts\") names_to_exclude Vector names exclude analysis (default: NULL) deduplicate_content Whether detect handle duplicate content (default: FALSE) similarity_threshold Similarity threshold duplicate detection (default: 0.95) duplicate_method Method duplicate detection: \"hybrid\", \"content\", \"metadata\" (default: \"hybrid\")","code":""},{"path":"https://revgizmo.github.io/engager/reference/summarize_transcript_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Transcript Files — summarize_transcript_files","text":"tibble containing summarized transcript metrics","code":""},{"path":"https://revgizmo.github.io/engager/reference/summarize_transcript_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Transcript Files — summarize_transcript_files","text":"","code":"# Create sample transcript file names transcript_files <- c(   \"GMT20240115-100000_Recording.transcript.vtt\",   \"GMT20240116-140000_Recording.transcript.vtt\" )  # Summarize transcript files summary <- summarize_transcript_files(transcript_file_names = transcript_files)"},{"path":"https://revgizmo.github.io/engager/reference/summarize_transcript_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Transcript Metrics — summarize_transcript_metrics","title":"Summarize Transcript Metrics — summarize_transcript_metrics","text":"Process Zoom recording transcript return summary metrics speaker","code":""},{"path":"https://revgizmo.github.io/engager/reference/summarize_transcript_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Transcript Metrics — summarize_transcript_metrics","text":"","code":"summarize_transcript_metrics(   transcript_file_path = \"\",   names_exclude = c(\"dead_air\"),   consolidate_comments = TRUE,   max_pause_sec = 1,   add_dead_air = TRUE,   dead_air_name = \"dead_air\",   na_name = \"unknown\",   transcript_df = NULL,   comments_format = c(\"list\", \"text\", \"count\") )"},{"path":"https://revgizmo.github.io/engager/reference/summarize_transcript_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Transcript Metrics — summarize_transcript_metrics","text":"transcript_file_path Path transcript file process names_exclude Vector names exclude analysis (default: c(\"dead_air\")) consolidate_comments Whether consolidate consecutive comments (default: TRUE) max_pause_sec Maximum pause seconds comments consolidate (default: 1) add_dead_air Whether add dead air rows gaps transcript (default: TRUE) dead_air_name Name use dead air periods (default: 'dead_air') na_name Name use unknown speakers (default: 'unknown') transcript_df Pre-loaded transcript data frame (alternative transcript_file_path) comments_format Format comments: \"list\", \"text\", \"count\" (default: \"list\")","code":""},{"path":"https://revgizmo.github.io/engager/reference/summarize_transcript_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Transcript Metrics — summarize_transcript_metrics","text":"tibble containing summary metrics speaker","code":""},{"path":"https://revgizmo.github.io/engager/reference/summarize_transcript_metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize Transcript Metrics — summarize_transcript_metrics","text":"Original code posted Conor Healy: https://ucbischool.slack.com/archives/C02A36407K9/p1631855705002000 Addition wordcount, wordcount_perc, wpm Brooks Ambrose: https://gist.github.com/brooksambrose/1a8a673eb3bf884c1868ad4d80f08246","code":""},{"path":"https://revgizmo.github.io/engager/reference/summarize_transcript_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Transcript Metrics — summarize_transcript_metrics","text":"","code":"# Load a sample transcript from the package's extdata directory transcript_file <- system.file(\"extdata/transcripts/GMT20240124-202901_Recording.transcript.vtt\",   package = \"engager\" ) summarize_transcript_metrics(transcript_file_path = transcript_file) #> # A tibble: 14 × 13 #>    transcript_file  name      n duration wordcount comments perc_n perc_duration #>    <chr>            <chr> <int>    <dbl>     <dbl> <I<list>  <dbl>         <dbl> #>  1 GMT20240124-202… Stud…     8   69.1         213 <chr>     17.8         27.5   #>  2 GMT20240124-202… Stud…    10   44.9         135 <chr>     22.2         17.9   #>  3 GMT20240124-202… Stud…     7   33.4         447 <chr>     15.6         13.3   #>  4 GMT20240124-202… Stud…     5   22.4         126 <chr>     11.1          8.91  #>  5 GMT20240124-202… Stud…     2   14.3         252 <chr>      4.44         5.70  #>  6 GMT20240124-202… Stud…     3   14.1         260 <chr>      6.67         5.60  #>  7 GMT20240124-202… Stud…     3   11.4         198 <chr>      6.67         4.55  #>  8 GMT20240124-202… Stud…     1   11.1          95 <chr>      2.22         4.43  #>  9 GMT20240124-202… Stud…     1   10.1          60 <chr>      2.22         4.01  #> 10 GMT20240124-202… Stud…     1    9.01         27 <chr>      2.22         3.59  #> 11 GMT20240124-202… Stud…     1    7.63         71 <chr>      2.22         3.04  #> 12 GMT20240124-202… Stud…     1    2.32         24 <chr>      2.22         0.923 #> 13 GMT20240124-202… Stud…     1    0.790         2 <chr>      2.22         0.314 #> 14 GMT20240124-202… Stud…     1    0.680         1 <chr>      2.22         0.271 #> # ℹ 5 more variables: perc_wordcount <dbl>, n_perc <dbl>, duration_perc <dbl>, #> #   wordcount_perc <dbl>, wpm <dbl>"},{"path":"https://revgizmo.github.io/engager/reference/user_friendly_error.html","id":null,"dir":"Reference","previous_headings":"","what":"User-Friendly Error Handling System — user_friendly_error","title":"User-Friendly Error Handling System — user_friendly_error","text":"Provides helpful error messages recovery guidance help users understand resolve issues quickly. User-friendly error wrapper Wraps expressions user-friendly error handling","code":""},{"path":"https://revgizmo.github.io/engager/reference/user_friendly_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User-Friendly Error Handling System — user_friendly_error","text":"","code":"user_friendly_error(expr, context = \"operation\")"},{"path":"https://revgizmo.github.io/engager/reference/user_friendly_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User-Friendly Error Handling System — user_friendly_error","text":"expr Expression evaluate context Context error message","code":""},{"path":"https://revgizmo.github.io/engager/reference/user_friendly_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"User-Friendly Error Handling System — user_friendly_error","text":"","code":"if (FALSE) { # Wrap any expression with user-friendly error handling result <- user_friendly_error(   {     load_zoom_transcript(\"nonexistent.vtt\")   },   \"loading transcript\" ) }"},{"path":"https://revgizmo.github.io/engager/reference/validate_directory_argument.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate directory argument with user-friendly errors — validate_directory_argument","title":"Validate directory argument with user-friendly errors — validate_directory_argument","text":"Validates directory arguments provides helpful error messages","code":""},{"path":"https://revgizmo.github.io/engager/reference/validate_directory_argument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate directory argument with user-friendly errors — validate_directory_argument","text":"","code":"validate_directory_argument(   dir_path,   context = \"directory operation\",   create_if_missing = TRUE )"},{"path":"https://revgizmo.github.io/engager/reference/validate_directory_argument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate directory argument with user-friendly errors — validate_directory_argument","text":"dir_path Path directory context Context error message create_if_missing Whether create directory exist","code":""},{"path":"https://revgizmo.github.io/engager/reference/validate_directory_argument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate directory argument with user-friendly errors — validate_directory_argument","text":"TRUE valid, stops user-friendly error invalid","code":""},{"path":"https://revgizmo.github.io/engager/reference/validate_file_argument.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate function arguments with user-friendly errors — validate_file_argument","title":"Validate function arguments with user-friendly errors — validate_file_argument","text":"Validates function arguments provides helpful error messages","code":""},{"path":"https://revgizmo.github.io/engager/reference/validate_file_argument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate function arguments with user-friendly errors — validate_file_argument","text":"","code":"validate_file_argument(file_path, context = \"file operation\")"},{"path":"https://revgizmo.github.io/engager/reference/validate_file_argument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate function arguments with user-friendly errors — validate_file_argument","text":"file_path Path file context Context error message","code":""},{"path":"https://revgizmo.github.io/engager/reference/validate_file_argument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate function arguments with user-friendly errors — validate_file_argument","text":"TRUE valid, stops user-friendly error invalid","code":""},{"path":"https://revgizmo.github.io/engager/reference/validate_privacy_compliance.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Privacy Compliance — validate_privacy_compliance","title":"Validate Privacy Compliance — validate_privacy_compliance","text":"Scans data objects ensure real names appear outputs privacy masking enabled. function performs exact matching detect privacy violations stops processing real names found.","code":""},{"path":"https://revgizmo.github.io/engager/reference/validate_privacy_compliance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Privacy Compliance — validate_privacy_compliance","text":"","code":"validate_privacy_compliance(   data = NULL,   privacy_level = getOption(\"engager.privacy_level\", \"mask\"),   real_names = NULL,   stop_on_violation = TRUE )"},{"path":"https://revgizmo.github.io/engager/reference/validate_privacy_compliance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Privacy Compliance — validate_privacy_compliance","text":"data Data frame object validate privacy compliance privacy_level Privacy level validate . One c(\"ferpa_strict\", \"ferpa_standard\", \"mask\", \"none\"). Defaults getOption(\"engager.privacy_level\", \"mask\"). real_names Vector real names check . NULL, uses common name patterns detect potential violations. stop_on_violation Whether stop processing violations found. Defaults TRUE maximum privacy protection.","code":""},{"path":"https://revgizmo.github.io/engager/reference/validate_privacy_compliance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Privacy Compliance — validate_privacy_compliance","text":"Validation results compliance status violations found","code":""},{"path":"https://revgizmo.github.io/engager/reference/validate_privacy_compliance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Privacy Compliance — validate_privacy_compliance","text":"","code":"# Validate privacy compliance df <- tibble::tibble(   name = c(\"Student_01\", \"Student_02\"),   score = c(85, 92) ) validate_privacy_compliance(df) #> [1] TRUE  # Check with specific real names real_names <- c(\"John Smith\", \"Jane Doe\") validate_privacy_compliance(df, real_names = real_names) #> [1] TRUE"},{"path":"https://revgizmo.github.io/engager/reference/write_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Metrics — write_metrics","title":"Write Metrics — write_metrics","text":"Unified writer engagement-related outputs privacy enforcement. Parent directories created exist.","code":""},{"path":"https://revgizmo.github.io/engager/reference/write_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Metrics — write_metrics","text":"","code":"write_metrics(   data = NULL,   what = c(\"engagement\", \"summary\", \"session_summary\"),   path = NULL,   comments_format = c(\"text\", \"count\"),   privacy_level = getOption(\"engager.privacy_level\", \"mask\") )"},{"path":"https://revgizmo.github.io/engager/reference/write_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Metrics — write_metrics","text":"data tibble containing data write Type output: \"engagement\", \"summary\", \"session_summary\" (default: \"engagement\") path File path write output comments_format Format comments: \"text\" \"count\" (default: \"text\") privacy_level Privacy level data export (default: global option)","code":""},{"path":"https://revgizmo.github.io/engager/reference/write_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Metrics — write_metrics","text":"return value, writes data file","code":""},{"path":"https://revgizmo.github.io/engager/reference/zse_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical schemas used in pipelines — zse_schema","title":"Canonical schemas used in pipelines — zse_schema","text":"documented reference used callers/tests. Keep minimal; adjust package evolves.","code":""},{"path":"https://revgizmo.github.io/engager/reference/zse_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical schemas used in pipelines — zse_schema","text":"","code":"zse_schema"},{"path":"https://revgizmo.github.io/engager/reference/zse_schema.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Canonical schemas used in pipelines — zse_schema","text":"object class list length 2.","code":""},{"path":[]}]
