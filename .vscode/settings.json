{
  "cursor.allowlist": {
    "include": [
      "R/**/*.R",
      "tests/**/*.R", 
      "vignettes/**/*.Rmd",
      "man/**/*.Rd",
      "README.md",
      "README.Rmd",
      "DESCRIPTION",
      "NAMESPACE",
      "CONTRIBUTING.md",
      "CRAN_CHECKLIST.md",
      "PROJECT.md",
      "DOCUMENTATION.md",
      "ISSUE_MANAGEMENT_QUICK_REFERENCE.md",
      "docs/**/*.md",
      "scripts/**/*.R",
      ".cursorrules",
      ".cursor/context.md"
    ],
    "exclude": [
      "**/inst/extdata/**",
      "**/*.rds",
      "**/*.csv",
      "**/.Rcheck/**",
      "**/revdep/**",
      "**/Meta/**",
      "**/doc/**",
      "**/.git/**",
      "**/node_modules/**",
      "**/.Rproj.user/**",
      "**/*.RData",
      "**/*.Rhistory",
      "**/*.Ruserdata",
      "**/zoom_real_world_testing/**",
      "**/all_r_files.txt",
      "**/r_files_with_examples.txt",
      "**/comprehensive_example_test_results.rds"
    ]
  },
  "cursor.commandExecution": {
    "enabled": true,
    "requireConfirmation": true,
    "restrictedCommands": [
      "gh pr merge",
      "gh pr close",
      "gh repo delete",
      "gh repo transfer",
      "gh issue close",
      "gh issue delete",
      "gh workflow disable",
      "gh workflow delete",
      "git push --force",
      "git push --force-with-lease",
      "git reset --hard",
      "git reset --hard HEAD~",
      "git clean -fd",
      "git clean -fdx",
      "git branch -D",
      "git branch -d",
      "git checkout -B",
      "git rebase --abort",
      "git rebase --skip",
      "git merge --abort",
      "git cherry-pick --abort",
      "git revert --abort",
      "git stash drop",
      "git stash clear",
      "git tag -d",
      "git remote remove",
      "git remote set-url",
      "git config --global",
      "git config --system"
    ],
    "allowedCommands": [
      "gh pr create",
      "gh pr view",
      "gh pr list",
      "gh issue create",
      "gh issue view",
      "gh issue list",
      "gh issue comment",
      "gh repo view",
      "gh repo clone",
      "gh workflow list",
      "gh workflow view",
      "git status",
      "git log",
      "git log --oneline",
      "git log --graph",
      "git diff",
      "git diff --staged",
      "git show",
      "git branch",
      "git branch -r",
      "git branch -a",
      "git remote -v",
      "git remote show",
      "git fetch",
      "git fetch --all",
      "git pull",
      "git pull --rebase",
      "git add",
      "git add .",
      "git commit",
      "git commit -m",
      "git push",
      "git checkout",
      "git checkout -b",
      "git merge",
      "git rebase",
      "git cherry-pick",
      "git revert",
      "git stash",
      "git stash pop",
      "git stash apply",
      "git tag",
      "git config --local",
      "git config --list",
      "git help"
    ],
    "requireReview": [
      "gh pr create",
      "gh issue create",
      "git push",
      "git commit",
      "git merge",
      "git rebase",
      "git checkout -b",
      "git tag",
      "git remote add"
    ]
  },
  "cursor.security": {
    "confirmDestructiveActions": true,
    "confirmGitOperations": true,
    "confirmGitHubOperations": true,
    "maxCommandLength": 1000,
    "blockedPatterns": [
      "rm -rf",
      "sudo",
      "chmod 777",
      "curl.*|.*bash",
      "wget.*|.*bash",
      "rm -rf /",
      "rm -rf ~",
      "rm -rf .*",
      "dd if=",
      "mkfs",
      "fdisk",
      "format",
      "del /s /q",
      "format c:",
      "shutdown",
      "reboot",
      "halt",
      "poweroff",
      "kill -9",
      "killall",
      "pkill -f",
      "systemctl",
      "service",
      "init",
      "telinit",
      "wall",
      "write",
      "mesg",
      "echo.*>.*/etc/",
      "echo.*>.*/var/",
      "echo.*>.*/usr/",
      "cat.*>.*/etc/",
      "cat.*>.*/var/",
      "cat.*>.*/usr/",
      "mv.*/etc/",
      "mv.*/var/",
      "mv.*/usr/",
      "cp.*/etc/",
      "cp.*/var/",
      "cp.*/usr/"
    ],
    "safeBranches": [
      "main",
      "master",
      "develop",
      "feature/*",
      "bugfix/*",
      "hotfix/*"
    ],
    "protectedBranches": [
      "main",
      "master"
    ],
    "requireBackup": [
      "git reset --hard",
      "git clean",
      "git branch -D",
      "git push --force"
    ],
    "maxFileSize": 10485760,
    "preventSystemModification": true,
    "preventNetworkAccess": false,
    "requireConfirmationForNewFiles": true,
    "requireConfirmationForDeletions": true,
    "blockedDirectories": [
      "/etc",
      "/var",
      "/usr",
      "/bin",
      "/sbin",
      "/lib",
      "/lib64",
      "/opt",
      "/boot",
      "/dev",
      "/proc",
      "/sys",
      "/tmp",
      "/root",
      "/home/*/.ssh",
      "/home/*/.config",
      "/home/*/.local"
    ],
    "allowedDirectories": [
      "/Users/piper/git/zoomstudentengagement",
      "/Users/piper/git/zoomstudentengagement/*"
    ],
    "environmentProtection": {
      "preventEnvVarChanges": true,
      "preventPathModification": true,
      "preventShellConfigChanges": true,
      "protectedEnvVars": [
        "PATH",
        "HOME",
        "USER",
        "SHELL",
        "TERM",
        "DISPLAY",
        "XDG_RUNTIME_DIR",
        "SSH_AUTH_SOCK"
      ]
    },
    "dataProtection": {
      "preventDataExfiltration": true,
      "blockedDataPatterns": [
        "password.*=",
        "secret.*=",
        "token.*=",
        "key.*=",
        "api.*key",
        "private.*key",
        "ssh.*key",
        "gpg.*key",
        "aws.*key",
        "azure.*key",
        "google.*key",
        "github.*token",
        "gitlab.*token",
        "bitbucket.*token"
      ],
      "requireConfirmationForDataAccess": true
    },
    "recoverySettings": {
      "autoBackupBeforeDestructiveActions": true,
      "backupRetentionDays": 7,
      "backupLocation": "/Users/piper/git/zoomstudentengagement/.cursor-backups",
      "enableUndoLogging": true,
      "maxUndoSteps": 50
    }
  },
  "cursor.safety": {
    "enableSafetyMode": true,
    "requireConfirmationForAllCommands": false,
    "preventUnsafeOperations": true,
    "maxConcurrentOperations": 3,
    "operationTimeout": 300,
    "enableProgressTracking": true,
    "enableErrorRecovery": true,
    "safeModeSettings": {
      "preventFileOverwrites": true,
      "preventDirectoryDeletion": true,
      "preventSystemCommands": true,
      "preventNetworkCommands": false,
      "preventPackageInstallation": false,
      "requireConfirmationForPackages": true
    }
  },
  "cursor.workflow": {
    "enableWorkflowValidation": true,
    "requireTestingBeforeCommit": true,
    "requireDocumentationBeforeCommit": true,
    "preventDirectMainBranchWork": true,
    "enforceBranchNaming": true,
    "branchNamingPattern": "^(feature|bugfix|hotfix|docs|test|refactor|chore)/[a-z0-9-]+$",
    "commitMessagePattern": "^(feat|fix|docs|style|refactor|test|chore)(\\([a-z]+\\))?: .+$",
    "requireIssueReference": true,
    "issueReferencePattern": "(Closes|Fixes|Resolves) #\\d+",
    "preventForcePushToMain": true,
    "requirePullRequestForMain": true,
    "enableCodeReview": true,
    "requireApprovalForMerges": true
  },
  "cursor.enterprise": {
    "enableComplianceMode": true,
    "requireSecurityScanning": true,
    "preventSecretsInCode": true,
    "enforceCodeSigning": false,
    "requireAuditLogging": true,
    "complianceSettings": {
      "gdprCompliance": true,
      "soxCompliance": false,
      "hipaaCompliance": false,
      "pciCompliance": false,
      "dataRetentionDays": 30,
      "auditLogLocation": "/Users/piper/git/zoomstudentengagement/.cursor-audit"
    },
    "securityScanning": {
      "enableSAST": true,
      "enableDependencyScanning": true,
      "enableSecretScanning": true,
      "blockedVulnerabilities": [
        "critical",
        "high"
      ],
      "allowedVulnerabilities": [
        "low",
        "medium"
      ],
      "scanBeforeCommit": true,
      "scanBeforePush": true
    }
  },
  "cursor.rPackage": {
    "enableCRANCompliance": true,
    "requireRCMDCHeck": true,
    "preventCRANSubmission": true,
    "enforceRoxygen2": true,
    "requireTestCoverage": true,
    "minTestCoverage": 90,
    "cranSettings": {
      "blockedCommands": [
        "devtools::release()",
        "devtools::submit_cran()",
        "devtools::build_win()",
        "devtools::check_win_release()",
        "devtools::check_win_devel()",
        "devtools::check_mac_release()",
        "devtools::check_mac_devel()",
        "devtools::check_rhub()",
        "devtools::check_rhub_platforms()",
        "devtools::release()",
        "devtools::submit_cran()",
        "R CMD build --binary",
        "R CMD install --build",
        "R CMD check --as-cran"
      ],
      "allowedCommands": [
        "R CMD check",
        "R CMD build",
        "R CMD install",
        "devtools::check()",
        "devtools::build()",
        "devtools::install()",
        "devtools::test()",
        "devtools::document()",
        "devtools::spell_check()",
        "covr::package_coverage()",
        "styler::style_pkg()",
        "lintr::lint_package()"
      ],
      "requireConfirmation": [
        "R CMD check --as-cran",
        "devtools::check()",
        "devtools::build()"
      ]
    },
    "roxygen2Settings": {
      "requireCompleteDocumentation": true,
      "requireExamples": true,
      "requireParameterDocumentation": true,
      "requireReturnDocumentation": true,
      "requireSeeAlso": true,
      "requireFamily": true,
      "enforceNamingConventions": true,
      "requireExportTags": true
    },
    "testingSettings": {
      "requireTestthat": true,
      "requireCovr": true,
      "minTestCoverage": 90,
      "requirePositiveTests": true,
      "requireNegativeTests": true,
      "requireEdgeCaseTests": true,
      "requireErrorTests": true,
      "testFilePattern": "test-.*\\.R$",
      "testDirectory": "tests/testthat/"
    }
  },
  "cursor.community": {
    "enableCommunityFeatures": true,
    "shareSettings": false,
    "enableTelemetry": false,
    "communitySettings": {
      "enableCursorShare": false,
      "enableAnonymousUsage": false,
      "enableFeatureFlags": false,
      "enableBetaFeatures": false,
      "enableExperimentalFeatures": false
    }
  }
} 