# Dockerfile.cursor - R Package Development for Cursor Background Agents
# Based on research from Issue #262 - Cursor Background Agent Docker Setup and Integration
# Optimized for R package development with zoomstudentengagement dependencies
#
# This Dockerfile provides a complete R development environment for Cursor background agent
# Docker integration, specifically configured for R package development with all necessary
# dependencies for the zoomstudentengagement package.
#
# Usage:
# 1. Configure .cursor/environment.json with your HOST_UID and HOST_GID
# 2. Use "Develop in Agent" workflow for R package development
# 3. All R development tools and dependencies are pre-installed

FROM rocker/r-ver:4.4.0

# Fix system time and repository issues
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Update system and install minimal dependencies first
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# --- Build Arguments for User Matching (CRITICAL FOR BACKGROUND AGENTS) ---
# These arguments are used to pass the host user's UID and GID into the build.
# This is crucial for avoiding file permission issues when the agent
# mounts your local workspace into the container.
ARG HOST_UID=1000
ARG HOST_GID=1000

# Install additional system dependencies for R package development
RUN apt-get update && apt-get install -y \
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    libfontconfig1-dev \
    libharfbuzz-dev \
    libfribidi-dev \
    libfreetype6-dev \
    libpng-dev \
    libtiff5-dev \
    libjpeg-dev \
    libcairo2-dev \
    libxt-dev \
    libgit2-dev \
    libssh2-1-dev \
    vim \
    nano \
    pandoc \
    pandoc-citeproc \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /workspace

# Install R development tools and package dependencies
RUN R -e "install.packages(c('devtools', 'roxygen2', 'testthat', 'covr', 'knitr', 'rmarkdown', 'withr'), repos='https://cran.rstudio.com/')"

# Install package-specific dependencies
RUN R -e "install.packages(c('data.table', 'digest', 'dplyr', 'ggplot2', 'hms', 'jsonlite', 'lubridate', 'magrittr', 'purrr', 'readr', 'rlang', 'stringr', 'tibble', 'tidyr', 'tidyselect'), repos='https://cran.rstudio.com/')"

# Create non-root user for security with dynamic UID/GID matching (ENHANCED APPROACH)
# This approach uses build arguments to match host user UID/GID, preventing
# permission issues when the agent mounts the workspace into the container.
RUN set -e; \
    # Create a group with the host's GID
    groupadd -g ${HOST_GID} cursor || echo "Group cursor may already exist"; \
    # Create a user with the host's UID and the new group's GID
    useradd -u ${HOST_UID} -g cursor -m -s /bin/bash cursor || echo "User cursor may already exist"; \
    # Add the new user to the sudo group to allow privilege escalation
    usermod -aG sudo cursor || echo "Could not add to sudo group"; \
    # Configure sudo to not require a password for the cursor user
    echo "cursor ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers || echo "Could not configure sudo"; \
    # Set ownership using the matched UID/GID
    chown -R ${HOST_UID}:${HOST_GID} /workspace || echo "Warning: Could not set ownership, continuing anyway"; \
    # Verify the setup
    id cursor || echo "Warning: Could not verify cursor creation"

# Switch to non-root user using the matched UID
USER ${HOST_UID}

# Set R environment variables for development
ENV R_ENVIRON_USER=/workspace/.Renviron
ENV R_PROFILE_USER=/workspace/.Rprofile

# Default command - start R session
CMD ["R", "--vanilla"]

# Environment variables for background agent detection
ENV CURSOR_AGENT_COMPATIBLE=1
ENV DOCKER_USER_NAMESPACE_COMPATIBLE=1
ENV R_PACKAGE_DEVELOPMENT=1
